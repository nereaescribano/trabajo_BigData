---
title: "An√°lisis de las plataformas de streaming"
description: |
  Estas plataformas han ido ganando importancia dentro de la industria del entretenimiento y se han convertido en parte de la vida cotidiana.
author:
  - name: Nerea Escribano Soria
    affiliation: Universitat de Val√®ncia
    affiliation-url: https://www.uv.es
date: 2024-01-24                           #--
categories: [trabajo BigData, entretenimiento, plataformas, streaming]   #--
image: "./imagenes/imagen_01.png"
title-block-banner: true #- {true, false, "green","#AA0000"}
title-block-banner-color: "black"    #-"#FFFFFF" 
toc-depth: 3
smooth-scroll: true
format: 
  html:
    #backgroundcolor: "#AB82FF"
    #embed-resources: true
    link-external-newwindow: true
    #css: ./assets/my_css_file.css   #- CUIDADO!!!!
code-tools: true
code-link: true
---

## Introducci√≥n

Se va a realizar un an√°lisis de diversas variables relacionadas con las principales plataformas de streaming [^1] debido al crecimiento que han experimentado sobretodo en los √∫ltimos a√±os. Las plataformas de streaming Netflix, Prime Video, Hulu y Disney+ ofrecen un gran cat√°logo de pel√≠culas, series y documentales acumulando m√°s de 160 millones de suscriptores en todo el mundo. Estas se han convertido en una parte crucial de la industria del entretenimiento y cada vez hay m√°s variedad y m√°s individuos que las eligen por su versatilidad y rapidez ya que se puede consumir en cualquier lugar del mundo y a cualquier hora.

En concreto, en este trabajo se va a analizar:

1. El n√∫mero de pel√≠culas que produce cada pa√≠s disponibles en streaming.
2. La cantidad de pel√≠culas disponibles en cada plataforma.
3. El idioma principal de las pel√≠culas.
4. Los diferentes grupos de edad recomendados en las pel√≠culas de cada plataforma.
5. La categor√≠a o g√©nero principal de las pel√≠culas.
6. Las pel√≠culas mejor valoradas de cada plataforma.
7. El caso de Netflix.

[^1]: El streaming o contenido bajo demanda es la distribuci√≥n de audio o video por Internet de forma continua y sin interrupci√≥n y sin necesidad de una descarga previa

![Plataformas Streaming](https://d500.epimg.net/cincodias/imagenes/2019/07/11/lifestyle/1562841657_226036_1562841728_noticia_normal.jpg)

> ‚≠ê Alguna informaci√≥n interesante para los precios de 2024 de las plataformas de streaming en Espa√±a: [aqu√≠](https://www.genbeta.com/a-fondo/netflix-prime-video-hbo-max-disney-cuanto-costaran-2024-principales-plataformas-streaming-espana){target="_blank"}

------------------------------------------------------------------------

## Obtenci√≥n de datos

::: panel-tabset
## Datos utilizados

Los datos se pueden obtener de la web [Kaggle](https://www.kaggle.com){target="_blank"} donde hay gran diversidad de datos. He seleccionado varios conjuntos de datos para tener variedad en cuanto a plataformas, g√©neros de las producciones, pa√≠ses con m√°s volumen de producciones, t√≠tulos de series o pel√≠culas con su popularidad, n√∫mero de temporadas o donde est√°n disponibles, ganancias, suscriptores... El a√±o analizado de la mayor√≠a de los datos es 2022.

-   El dataset df_stream_kaggle.csv contiene 18719 observaciones sobre un conjunto de 22 columnas.
-   El dataset df_movies_streaming_platforms_2022.csv contiene 9515 observaciones sobre un conjunto de 11 columnas.
-   El dataset df_moviestreams.csv contiene 16744 observaciones sobre un conjunto de 17 columnas.
-   El dataset df_netflix_subscribers.csv contiene 4 observaciones sobre un conjunto de 11 columnas.
-   El dataset df_netflix_revenue.csv contiene 4 observaciones sobre un conjunto de 11 columnas.

## C√≥digos

```{r, echo = TRUE}

# Estos son los paquetes que he utilizado:

#| eval: true
library(rio)
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(ggThemeAssist)
library(plotly)
library(gganimate)
library(patchwork)
library(RColorBrewer)
library(wordcloud)
library(knitr)
library(kableExtra)

# Cargamos todos los datos que voy a utilizar:

archivo_de_destino <- here::here("datos", "df_stream_kaggle.csv")
df_stream_kaggle <- rio::import(archivo_de_destino)

archivo_de_destino <- here::here("datos", "df_movies_streaming_platforms_2022.csv")
df_movies_streaming_platforms_2022 <- rio::import(archivo_de_destino)

archivo_de_destino <- here::here("datos", "df_moviestreams.csv")
df_moviestreams <- rio::import(archivo_de_destino)

archivo_de_destino <- here::here("datos", "df_netflix_subscribers.csv")
df_netflix_subscribers <- rio::import(archivo_de_destino)  

archivo_de_destino <- here::here("datos", "df_netflix_revenue.csv")
df_netflix_revenue <- rio::import(archivo_de_destino) 

```
:::

------------------------------------------------------------------------

## 1. Pa√≠ses que realizan un mayor n√∫mero de producci√≥n de pel√≠culas en las plataformas de streaming.

```{r, echo = TRUE, message = FALSE, warning = FALSE}

#- Gr√°fico dividido seg√∫n tama√±o en cuanto al n√∫mero de producci√≥n de pel√≠culas disponibles en streaming para cada pa√≠s.

df_stream_kaggle_paises <- df_stream_kaggle %>%
  separate_rows(production_countries, sep = ",") %>%
  filter(production_countries != "") %>%
  count(production_countries) %>%
  arrange(desc(n))  

plot_ly(data = df_stream_kaggle_paises, 
        labels = ~production_countries, 
        parents = ~"", 
        values = ~n, 
        type = 'treemap') %>% 
  layout(title = "N√∫mero de producciones realizadas por cada pa√≠s")

```
<br>

En este gr√°fico se pueden observar el n√∫mero de producciones para plataformas de streaming realizadas por cada pa√≠s (eliminando las producciones que son realizadas simult√°neamente por diversos pa√≠ses). Los pa√≠ses donde m√°s producciones se realizan son Estados Unidos con 12253 y sigui√©ndole India con 1544, Gran Breta√±a con 1533, Canad√° con 899 y Francia con 672. Esta informaci√≥n tiene relaci√≥n con que los pa√≠ses del ranking son los que destacan en general por su producci√≥n de filmes y que tienen mayor impacto por su gran recaudaci√≥n en ingresos de cada pel√≠cula. 

Si se busca Espa√±a en el conjunto de datos, este pa√≠s ha realizado 294 producciones.

> üó∫Ô∏è Informaci√≥n interesante sobre las pel√≠culas nacionales favoritas de cada pa√≠s: [aqu√≠](https://www.larazon.es/sociedad/20211124/jrpyi32v5fbidavs5q3kagv634.html){target="_blank"}

------------------------------------------------------------------------

## 2. Cantidad de pel√≠culas disponibles en las plataformas de streaming principales

```{r, message = FALSE, warning = FALSE}

#- Convertimos las columnas en numeric, quitamos NA y contamos el n√∫mero de pel√≠culas disponibles para cada servicio de streaming creando una columna para ello y el gr√°fico de barras plotly.

streaming_platforms_2022 <- read.csv(file = 'datos/df_movies_streaming_platforms_2022.csv')
streaming_platforms_separado <- streaming_platforms_2022 %>% separate(col = Rotten.Tomatoes, 
                                                        into = c("score", "borrar"),
                                                        sep  = "/") %>% select(-borrar) 

streaming_platforms_separado$score <- as.numeric(streaming_platforms_separado$score) 
streaming_platforms_separado = streaming_platforms_separado %>% drop_na() %>% mutate(plataformas = ifelse(Netflix == 1, "netflix",
                                                                                ifelse(Hulu == 1, "hulu",
                                                                                       ifelse(Prime.Video == 1, "prime",
                                                                                              ifelse(Disney. == 1, "disney", "ups")))))  
                
cantidad_de_peliculas =  streaming_platforms_separado %>% count(plataformas, name = "cantidad")

p2 <- ggplot(cantidad_de_peliculas, aes(x = plataformas, y = cantidad, fill = plataformas)) + 
geom_bar(stat = "identity") + 
  scale_fill_manual(values = c("#0000CD", "#00FF7F", "#FF0000", "#63B8FF")) +
  labs(title = "Cantidad de pel√≠culas en cada servicio de streaming",
       subtitle = "en 2022",
       x = "Plataforma",
       y = "Cantidad") +
  theme_minimal() + 
  theme(panel.grid.major = element_line(colour = "white"),
    panel.grid.minor = element_line(colour = "white"),
    axis.text.x = element_text(family = "mono"),
    axis.text.y = element_text(family = "mono"))

plotly::ggplotly(p2)

```
<br>

Se observa as√≠ que las plataformas en 2022 con m√°s pel√≠culas fueron en primer lugar, Prime video y en segundo lugar, Netflix con gran diferencia frente Disney + y Hulu y esto podr√≠a ser debido a que son m√°s conocidas y en la mayor√≠a de pa√≠ses se pueden contratar. Aunque estas cifras suelen variar debido a que el cat√°logo de pel√≠culas ofrecido para cada pa√≠s puede variar y recientemente todas han experimentado un aumento de sus producciones y Disney + ha aumentado su cat√°logo.

Cabe indicar que la creaci√≥n y fundaci√≥n de cada compa√±√≠a y primer a√±o de operaci√≥n fueron 2006 para Prime Video, 1997 para Netflix, 2007 para Hulu y 2019 para Disney +. 

<br><br>

::: {layout-nrow=4}
![Disney +](https://assets.puzzlefactory.com/puzzle/395/608/original.jpg){width=100px height=100px}
![Hulu](https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/Hulu_Logo.svg/2560px-Hulu_Logo.svg.png){width=100px height=100px}
![Netflix](https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png){width=100px height=100px}
![Prime Video](https://i.pcmag.com/imagery/reviews/02dIsBiVpmVTMeXkrKxWy0W-13..v1582749138.png){width=100px height=100px }
:::

------------------------------------------------------------------------

## 3. Divisi√≥n por idioma principal para las pel√≠culas disponibles en streaming

```{r, message = FALSE, warning = FALSE}

#- Primero convertimos los espacios vac√≠os en NA y los eliminamos, realizamos un recuento de los idiomas de las pel√≠culas y seleccionamos los 10 idiomas m√°s utilizados. En el data frame idiomas, se observa el n√∫mero de pel√≠culas en cada idioma. Y el gr√°fico est√° en % calculados a partir de los datos. Ajustamos texto, valores, colores y leyenda para el gr√°fico.

df_moviestreams <- df_moviestreams %>%
  mutate(Language = as.character(na_if(Language, "")))

idiomas <- df_moviestreams %>%
  filter(!is.na(Language)) %>%
  group_by(Language) %>%
  summarise(count = n()) %>%
  arrange(desc(count)) %>%
  top_n(10)

p3 <- plot_ly(idiomas, labels = ~Language, values = ~count, type = "pie", 
              text = ~ifelse(count > max(count) * 0.05, paste0(Language, "<br>", round(count / sum(count) * 100, 1), "%"), ""),
              width = 800, height = 450) %>%
  layout(
    margin = list(l = 0, r = 0, b = 0, t = 50), 
    showlegend = TRUE, 
    legend = list(x = 0.05, y = 0.9),
    annotations = list(
      x = 0.95,  
      y = 1,
      text = "Idiomas m√°s utilizados en las pel√≠culas",
      showarrow = FALSE,
      xref = "paper",
      yref = "paper")) %>%
  add_trace(
    hoverinfo = 'label+percent', 
    textposition = 'outside',
    marker = list(
      colors = c("#98F5FF", "#FF6A6A", "#C1FFC1", "#FF6EB4", "#FFF0F5", "chocolate1", "red", "violet", "yellow", "grey"),
      line = list(color = 'black', width = 2)))

p3

```
<br><br>

Se observa en este gr√°fico para el conjunto de plataformas de streaming analizadas: Netflix, Hulu, Prime Video y Disney que la mayor√≠a de pel√≠culas tienen como idioma principal el ingl√©s (84,90 % = 10955 pel√≠culas). Sigui√©ndole pero en menor proporci√≥n, est√° el hindi (3,90 % = 503 pel√≠culas), el ingl√©s y el espa√±ol (2,14 % = 276 pel√≠culas) y el espa√±ol (2,07 % = 267 pel√≠culas). Este hecho tiene gran relaci√≥n con que el mayor n√∫mero de producciones de pel√≠culas sea Estados Unidos, cuyo idioma principal es el ingl√©s, como se ha analizado en el primer gr√°fico.

Asimismo, el ingl√©s y el espa√±ol est√°n entre los idiomas m√°s hablados del mundo con aproximadamente 1,452 millones y 548 millones de hablantes respectivamente.

------------------------------------------------------------------------

## 4.1 Divisi√≥n por plataforma y edad recomendada

```{r, message = FALSE, warning = FALSE}

#- Primero convertimos los espacios vac√≠os en NA y los eliminamos, realizamos un recuento por recomendaci√≥n de m√≠nimo de edad para ver las pel√≠culas en cada plataforma de streaming creando la columna Platform. Si quisieramos solo ver una plataforma y sus rangos de edad, deber√≠amos filtrar ej: df_netflix <- df_edad_platform_long %>% filter(Platform == "Netflix").

df_moviestreams <- df_moviestreams %>%
mutate(Age = as.character(na_if(Age, "")))

df_edad_platform <- df_moviestreams %>%
  select(`Netflix`, `Hulu`, `Prime Video`, `Disney+`, Age) %>%
  filter(!is.na(Age))

df_edad_platform_long <- df_edad_platform %>%
  gather(Platform, Value, -Age) %>%
  filter(Value == 1) %>%
  group_by(Platform, Age) %>%
  summarise(count = n())

p4 <- ggplot(df_edad_platform_long, aes(x = Age, y = count, fill = Platform)) + 
  geom_bar(stat = "identity") +
  scale_fill_manual(values = c("#0000CD", "#00FF7F", "#FF0000", "#63B8FF")) + 
  facet_wrap(vars(Platform), nrow = 4, ncol = 2, scales = "free") +
  labs(title = "Distribuci√≥n de pel√≠culas por grupo de edad",
         x = "Grupo de Edad",
         y = "N√∫mero de Pel√≠culas",
       fill = "Plataforma de Streaming") +
  theme_minimal() +
  theme(axis.text.x = element_text(family = "mono"),
        axis.text.y = element_text(family = "mono"))

plotly::ggplotly(p4)

```
<br>

As√≠, visualmente se observa que la plataforma de streaming con m√°s pel√≠culas de edad m√≠nima + 18 recomendada para verlas es Prime Video (2612) y la plataforma de streaming con m√°s pel√≠culas para todos los p√∫blicos (all) o + 7 a√±os tambi√©n ser√≠a Prime Video con 1322 pel√≠culas (406 y 916). Sigui√©ndole Disney + con 456 pel√≠culas (277 y 179 respectivamente), aunque Netflix se le aproxima con 453 pel√≠culas (130 y 323 respectivamente). Esto se debe en realidad al hecho de que el cat√°logo de Prime Video y Netflix es mucho mayor como ya se ha analizado anteriormente.

As√≠, si se observar√° cada plataforma individualmente, sin ver las dem√°s, Disney + destacar√≠a por su cantidad de pel√≠culas para todos los p√∫blicos o mayores de 7 a√±os y Prime Video, Netflix y Hulu por su cantidad de pel√≠culas recomendadas para mayores de 18 a√±os.

Tambi√©n, hay que tener en cuenta el eje y para el an√°lisis, dado que este es libre para cada plataforma seg√∫n su n√∫mero de pel√≠culas para as√≠ representarse de acuerdo a cada plataforma.

Este resultado tiene relaci√≥n con el grupo objetivo al que se dirige cada plataforma como se va a indicar posteriormente.

------------------------------------------------------------------------

# 4.2 Edad recomendada para pel√≠culas de cada plataforma de streaming

```{r, message = FALSE, warning = FALSE}

#- Primero convertimos los espacios vac√≠os en NA y los eliminamos, realizamos un recuento por recomendaci√≥n de m√≠nimo de edad para ver las pel√≠culas en cada plataforma de streaming. 

df_moviestreams <- df_moviestreams %>%
mutate(Age = as.character(na_if(Age, "")))

df_edad_platform <- df_moviestreams %>%
  select(`Netflix`, `Hulu`, `Prime Video`, `Disney+`, Age) %>%
  filter(!is.na(Age))

df_edad_platform_long <- df_edad_platform %>%
  gather(Platform, Value, -Age) %>%
  filter(Value == 1)

p5 <- ggplot(df_edad_platform_long, aes(x = Age, fill = Platform)) +
  geom_bar(position = "dodge", show.legend = TRUE) +
  scale_fill_manual(values = c("#0000CD", "#00FF7F", "#FF0000", "#63B8FF")) +
  labs(title = "Distribuci√≥n de pel√≠culas por grupo de edad en cada plataforma",
       x = "Grupo de Edad",
       y = "N√∫mero de Pel√≠culas", 
       fill = "Plataforma") +
  theme_minimal() + 
  theme(axis.text.x = element_text(family = "mono"),
        axis.text.y = element_text(family = "mono"))

plotly::ggplotly(p5)

```
<br>

Para 2022, si analizamos el conjunto de pel√≠culas de cada plataforma y a partir de la edad recomendada, se puede analizar visualmente lo ya comentado.

Esta visualizaci√≥n cuyo eje y s√≠ comienza en 0, indica claramente que plataforma tiene m√°s cantidad de pel√≠culas para cada grupo de edad recomendado. 

El grupo objetivo de cada plataforma y mayor audiencia es para Disney + m√°s infantil-juvenil y para familias mientras que para las otras plataformas, son generalmente j√≥venes y adultos. 

------------------------------------------------------------------------

## 5. Categor√≠a de las pel√≠culas

En cuanto a las categor√≠as de las pel√≠culas, existen muchas categor√≠as pero si destacamos la principal de cada categor√≠a, podemos encontrar 19 categor√≠as, de cu√°l en global para las plataformas, predomina drama üé≠ (4592) , comedia ü§™ (3412) y thriller üò® (2225).

```{r, out.width='700px', fig.align='center', message = FALSE, warning = FALSE}

#- wordcloud del g√©nero principal de las pel√≠culas

df_genres <- df_stream_kaggle %>%
  group_by(main_genre) %>%
  summarise(count = n()) %>%
  ungroup() %>%
  arrange(desc(count))

df_genres$main_genre <- factor(df_genres$main_genre)

wordcloud(words = df_genres$main_genre, freq = df_genres$count, min.freq = 50, scale=c(3,1), colors=brewer.pal(8, "Dark2"))

```

Si dividimos por plataforma de streaming, el g√©nero principal de sus pel√≠culas, se observa que:

-   Para [Amazon]{.underline} la mayor√≠a de sus pel√≠culas son drama, comedia y thriller. üé≠ ü§™ üò®
-   Para [Disney]{.underline} la mayor√≠a de sus pel√≠culas son comedia, documentales y fantas√≠a. ü§™ üìπ üßö‚Äç‚ôÄÔ∏è
-   Para [Hulu]{.underline} la mayor√≠a de sus pel√≠culas son drama, comedia y thriller. üé≠ ü§™ üò®
-   Para [Netflix]{.underline} la mayor√≠a de sus pel√≠culas son comedia, drama y documentales. ü§™ üé≠ üìπ

------------------------------------------------------------------------

```{r, message = FALSE, warning = FALSE}

#- filtramos para las plataformas que estamos analizando y agrupamos por plataforma y g√©nero principal de sus pel√≠culas y realizamos un summarise. As√≠, se observa de n√∫mero de pel√≠culas para cada plataforma qu√© pertenecen a cada categor√≠a principal

df_genres_by_platform <- df_stream_kaggle %>%
  filter(streaming_service %in% c("netflix", "amazon", "hulu", "disney")) %>%
  group_by(streaming_service, main_genre) %>%
  summarise(count = n()) %>%
  ungroup()

df_genres_by_platform$main_genre <- factor(df_genres_by_platform$main_genre)

p6 <- ggplot(df_genres_by_platform, aes(x = streaming_service, y = count, color = main_genre)) +
  geom_point(position = position_dodge(width = 0.8), size = 3) +
  labs(title = "N√∫mero de Pel√≠culas por Plataforma y Categor√≠a de G√©nero",
       x = "Plataforma de Streaming",
       y = "N√∫mero de Pel√≠culas por G√©nero",
       color = "Categor√≠a principal") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.text = element_text(size = 8)) + theme(axis.text.x = element_text(family = "mono"),
    axis.text.y = element_text(family = "mono"))

plotly::ggplotly(p6)

```
<br><br>

As√≠, estas plataformas ofrecen m√°s variedad de esas 3 categor√≠as indicadas, aunque tambi√©n disponen de un cat√°logo amplio de otras variedades como se puede ver en el data frame. Tambi√©n, cabe comentar que el g√©nero mayoritario de las pel√≠culas tiene relaci√≥n con el p√∫blico al que van dirigido estas plataformas, siendo Disney + para todos los p√∫blicos y Amazon, Hulu y Netflix para un p√∫blico juvenil-adulto, como se ha comentado. 

<br>

![G√©neros cinematogr√°ficos m√°s populares](https://indiehoy.com/wp-content/uploads/2022/01/evolucion-de-los-generos.jpg)

------------------------------------------------------------------------

## 6. Pel√≠culas m√°s famosas en cada plataforma

En cuanto a las pel√≠culas, estas se pueden valorar en este data frame a trav√©s del IMDb score y IMDb votes [^2], TMDb score y TMDb votes. Las cinco pel√≠culas que han recibido un mayor n√∫mero de votos de cada plataforma y as√≠, un IMDb score mayor de entre estas en cada plataforma son las siguientes. Hay que tener en cuenta que se est√° realizando la tabla por orden descendente de mayor votos en funci√≥n del IMDb votes siendo la primera pel√≠cula que m√°s votos ha recibido.

[^2]: El IMDb score and votes es la puntuaci√≥n sobre 10 que se realiza por votaci√≥n en Internet Movie Database; la base de datos de pel√≠culas m√°s grande en Internet.

6.1 Para Amazon, el ranking de pel√≠culas mejor valoradas es Titanic (1133692 votos y 7.9 score), The Usual Suspects (1059480 votos y 8.5 score), Braveheart (1016629 votos y 8.4 score), The Sixth Sense (967864 votos y 8.2 score) y The Terminator (841706 votos y 8.1 score).

```{r, message = FALSE, warning = FALSE}

#- filtramos por la plataforma seleccionada, ordenamos por la variable IMDB votes de mayor a menor y seleccionamos las 5 pel√≠culas mejor valoradas junto a las variables indicadas. Se realiza una tabla y modificamos la est√©tica.

top_pel√≠culas_plataformas <- df_stream_kaggle %>%
  filter(streaming_service %in% c("amazon")) %>%
  arrange(desc(imdb_votes))  %>%
  select(streaming_service, title, release_year, runtime, imdb_score, imdb_votes) %>%
  group_by(streaming_service) %>%
  slice_head(n = 5)

tabla_amazon <- kable(
    head(top_pel√≠culas_plataformas),
    caption = paste("Top 5 pel√≠culas de Amazon"),
    col.names = c("Plataforma", "Nombre", "A√±o", "Duraci√≥n minutos", "IMDb Score", "IMDb Votes")
  ) %>%
    kable_styling(full_width = FALSE, position = "center") %>%
    row_spec(0, background = "#63B8FF") %>%
  column_spec(c(5), background = "#CAFF70", color = "black") %>%
  column_spec(c(1, 2, 3, 4, 6), background = "#F0FFFF", color = "black")

tabla_amazon

```

6.2 Para Netflix, el ranking de pel√≠culas mejor valoradas es Inception (2294231 votos y 8.8 score), Forrest Gump (2021343 votos y 8.8 score), The Dark Knight Rises (1669067 votos y 8.4 score), Se7en (1606270 votos y 8.6 score) y Django Unchained (1472668 votos y 8.4 score).

```{r, message = FALSE, warning = FALSE}

top_pel√≠culas_plataformas <- df_stream_kaggle %>%
  filter(streaming_service %in% c("netflix")) %>%
  arrange(desc(imdb_votes)) %>%
  select(streaming_service, title, release_year, runtime, imdb_score, imdb_votes) %>%
  group_by(streaming_service) %>%
  slice_head(n = 5)

tabla_netflix <- kable(
    head(top_pel√≠culas_plataformas),
    caption = paste("Top 5 pel√≠culas de Netflix"),
    col.names = c("Plataforma", "Nombre", "A√±o", "Duraci√≥n minutos", "IMDb Score", "IMDb Votes")
  ) %>%
    kable_styling(full_width = FALSE, position = "center") %>%
    row_spec(0, background = "#FF0000") %>%
  column_spec(c(5), background = "#CAFF70", color = "black") %>%
  column_spec(c(1, 2, 3, 4, 6), background = "#F0FFFF", color = "black")

tabla_netflix

```

6.3 Para Hulu, el ranking de pel√≠culas mejor valoradas es Deadpool (996056 votos y 8.0 score), A Beautiful Mind (909359 votos y 8.2 score), Black Swan (745933 votos y 8.0 score), Parasite (742045 votos y 8.5 score) y Prisoners (679548 votos y 8.1 score).

```{r, message = FALSE, warning = FALSE}

top_pel√≠culas_plataformas <- df_stream_kaggle %>%
  filter(streaming_service %in% c("hulu")) %>%
  arrange(desc(imdb_votes)) %>%
  select(streaming_service, title, release_year, runtime, imdb_score, imdb_votes) %>%
  group_by(streaming_service) %>%
  slice_head(n = 5) 
 
tabla_hulu <- kable(
    head(top_pel√≠culas_plataformas),
    caption = paste("Top 5 pel√≠culas de Hulu"),
    col.names = c("Plataforma", "Nombre", "A√±o", "Duraci√≥n minutos", "IMDb Score", "IMDb Votes")
  ) %>%
    kable_styling(full_width = FALSE, position = "center") %>%
    row_spec(0, background = "#00FF7F") %>%
    column_spec(c(5), background = "#CAFF70", color = "black") %>%
  column_spec(c(1, 2, 3, 4, 6), background = "#F0FFFF", color = "black")

tabla_hulu

```

6.4 Para Disney +, el ranking de pel√≠culas mejor valoradas es The Avengers (1353907 votos y 8.0 score), Star Wars (1321489 votos y 8.6 score), The Empire Strikes Back (1248319 votos y 8.7 score), Avatar (1193331 votos y 7.8 score) y Guardians of the Galaxy (1125382 votos y 8.0 score).

```{r, message = FALSE, warning = FALSE}

top_pel√≠culas_plataformas <- df_stream_kaggle %>%
  filter(streaming_service %in% c("disney")) %>%
  arrange(desc(imdb_votes)) %>%
  select(streaming_service, title, release_year, runtime, imdb_score, imdb_votes) %>%
  group_by(streaming_service) %>%
  slice_head(n = 5)
 
tabla_disney <- kable(
    head(top_pel√≠culas_plataformas),
    caption = paste("Top 5 pel√≠culas de Disney +"),
    col.names = c("Plataforma", "Nombre", "A√±o", "Duraci√≥n minutos", "IMDb Score", "IMDb Votes")
  ) %>%
    kable_styling(full_width = FALSE, position = "center") %>%
    row_spec(0, background = "#0000CD") %>%
  column_spec(c(5), background = "#CAFF70", color = "black") %>%
  column_spec(c(1, 2, 3, 4, 6), background = "#F0FFFF", color = "black")

tabla_disney

```

------------------------------------------------------------------------

## 7. Caso de NETFLIX

Netflix, Inc es una compa√±√≠a creada en 1997 con sede en Estados Unidos. La compa√±√≠a se define en su reporte anual a los inversores como ‚Äúuno de los l√≠deres mundiales del entretenimiento con aproximadamente 222 millones de suscriptores en alrededor de 190 pa√≠ses con series de televisi√≥n, documentales, largometrajes y juegos de m√≥viles a trav√©s de una gran variedad de g√©neros e idiomas‚Äù (Netflix, 2022). 

Su estrategia consiste en incrementar el n√∫mero de suscriptores globalmente y continuamente est√°n mejorando la experiencia de la plataforma a trav√©s de la expansi√≥n continua de su contenido que atrae a nuevos miembros y hace que los antiguos permanezcan (Netflix, 2022). Adem√°s, Netflix no solo ofrece series y pel√≠culas ajenas (cuyas licencias obtiene) sino que se encarga de producir sus propias licencias.

<br><br>

![NETFLIX](https://www.clarin.com/img/2023/06/27/eT3pjCwzO_360x240__1.jpg)

------------------------------------------------------------------------

## 7.1 N√∫mero de suscriptores de esta plataforma

En este caso, los datos sobre los suscriptores est√°n para los 4 trimestres de 2018, los 4 trimestres de 2019 y para dos trimestres de 2020. As√≠, se puede calcular una media de los trimestres para cada a√±o, para as√≠ ver la evoluci√≥n de los suscriptores de estos a√±os de forma din√°mica y animada. Pero tambi√©n, se puede observar la evoluci√≥n trimestral dado que de un trimestre a otro del mismo a√±o, los suscriptores tambi√©n aumentan.

Hay que tener en cuenta que el eje y del gr√°fico no comienza en 0, sino en aproximadamente 7 M.

::: panel-tabset
## Anual y din√°mico

```{r, message = FALSE, warning = FALSE}

#- gr√°fico para los suscriptores anuales de NETFLIX. Pero primero modificar los datos.

data_subscribers <- data.frame(
  Area = c("United States and Canada", "Latin America", "Europe, Middle East, and Africa", "Asia-Pacific"),
  Q1_2018 = c(60909000, 21260000, 29339000, 7394000),
  Q2_2018 = c(61870000, 22795000, 31317000, 8372000),
  Q3_2018 = c(63010000, 24115000, 33836000, 9461000),
  Q4_2018 = c(64757000, 26077000,	37818000, 10607000),
  Q1_2019 = c(66633000, 27547000,	42542000, 12141000),
  Q2_2019 = c(66501000, 27890000, 44229000, 12942000),
  Q3_2019 = c(67114000, 29380000, 47355000, 14485000),
  Q4_2019 = c(67662000, 31417000, 51778000, 16233000),
  Q1_2020 = c(69969000, 34318000, 58734000, 19835000),
  Q2_2020 = c(72904000, 36068000, 61483000, 22492000))

data_subscribers <- data_subscribers %>% 
  pivot_longer(cols = starts_with("Q"), names_to = "Quarter", values_to = "Subscribers") %>%
  mutate(Year = substr(Quarter, start = 4, stop = 7),
         Quarter = substr(Quarter, start = 1, stop = 2)) 

data_subscribers1 <- data_subscribers %>%
  group_by(Area, Year) %>%
  summarise(media_trimestral = mean(Subscribers)) %>% 
  ungroup()

data_subscribers1$Year <- as.Date(paste0(data_subscribers1$Year, "-01-01"))
data_subscribers1$Year <- as.Date(data_subscribers1$Year, format = "%Y")

mis_colores <- c("United States and Canada" = "#1E90FF",
                 "Latin America" = "#FFA500",
                 "Europe, Middle East, and Africa" = "#FFB6C1",
                 "Asia-Pacific" = "#B452CD")

breaks <- seq(min(data_subscribers1$Year), max(data_subscribers1$Year), length.out = 3)

p7 <- ggplot(data_subscribers1, aes(x = Year, y = media_trimestral, color = Area)) +
  geom_line(linewidth = 0.7) +
  labs(title = "Evoluci√≥n de los suscriptores de Netflix por √Årea", 
       subtitle = "(2018-2020)",
       x = "A√±os", y = "Suscriptores medios",
       color = "√Årea") +
  theme_minimal() + 
  scale_y_continuous(labels = scales::comma_format(scale = 1e-6, suffix = "M")) +
  scale_color_manual(values = mis_colores) +
  scale_x_date(breaks = breaks, labels = format(breaks, "%Y"))  + theme(plot.title = element_text(face = "bold"),
    legend.key = element_rect(fill = "thistle1"),
    legend.background = element_rect(fill = "thistle1")) + theme(axis.text = element_text(colour = "black"),
    axis.text.x = element_text(colour = "black"),
    axis.text.y = element_text(colour = "black"),
    legend.background = element_rect(colour = "white")) + theme(legend.key = element_rect(colour = "thistle1")) +
  transition_reveal(Year)

p7

```

## Trimestral y est√°tico
```{r, message = FALSE, warning = FALSE}

#- gr√°fico para los suscriptores trimestrales de NETFLIX. Pero primero modificar los datos.

data_subscribers <- data.frame(
  Area = c("United States and Canada", "Latin America", "Europe, Middle East, and Africa", "Asia-Pacific"),
  Q1_2018 = c(60909000, 21260000, 29339000, 7394000),
  Q2_2018 = c(61870000, 22795000, 31317000, 8372000),
  Q3_2018 = c(63010000, 24115000, 33836000, 9461000),
  Q4_2018 = c(64757000, 26077000,	37818000, 10607000),
  Q1_2019 = c(66633000, 27547000,	42542000, 12141000),
  Q2_2019 = c(66501000, 27890000, 44229000, 12942000),
  Q3_2019 = c(67114000, 29380000, 47355000, 14485000),
  Q4_2019 = c(67662000, 31417000, 51778000, 16233000),
  Q1_2020 = c(69969000, 34318000, 58734000, 19835000),
  Q2_2020 = c(72904000, 36068000, 61483000, 22492000))

data_subscribers <- data_subscribers %>% 
  pivot_longer(cols = starts_with("Q"), names_to = "Quarter", values_to = "Subscribers") %>%
  mutate(Year = substr(Quarter, start = 4, stop = 7),
         Quarter = substr(Quarter, start = 1, stop = 2)) 

data_subscribers$Year <- as.Date(paste0(data_subscribers$Year, format = "-01-01"))

mis_colores <- c("United States and Canada" = "#1E90FF",
                 "Latin America" = "#FFA500",
                 "Europe, Middle East, and Africa" = "#FFB6C1",
                 "Asia-Pacific" = "#B452CD")

p7 <- ggplot(data_subscribers, aes(x = paste(Year, Quarter), y = Subscribers, color = Area, group = Area)) +
  geom_line(linewidth = 0.7) +
  labs(title = "Evoluci√≥n trimestral de los suscriptores de Netflix por √Årea", 
       subtitle = "(Trimestres 2018-2020)",
       x = "Trimestre del a√±o", y = "Suscriptores",
       color = "√Årea") +
  theme_minimal() + 
  scale_y_continuous(labels = scales::comma_format(scale = 1e-6, suffix = "M")) + 
  scale_color_manual(values = mis_colores) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_x_discrete(labels = c("1T 2018", "2T 2018", "3T 2018", "4T 2018",
                              "1T 2019", "2T 2019", "3T 2019", "4T 2019",
                              "1T 2020", "2T 2020")) +
  theme(plot.title = element_text(face = "bold"),
    legend.key = element_rect(fill = "thistle1"),
    legend.background = element_rect(fill = "thistle1")) + theme(axis.text = element_text(colour = "black"),
    axis.text.x = element_text(colour = "black"),
    axis.text.y = element_text(colour = "black"),
    legend.background = element_rect(colour = "white")) + theme(legend.key = element_rect(colour = "thistle1")) 


p7

```
:::

------------------------------------------------------------------------

üåê Los sucriptores de Netflix han ido aumentando considerablemente desde sus inicios y en concreto, en los a√±os analizados (2018-2020). Esta plataforma se encuentra en gran diversidad de pa√≠ses y su cat√°logo tambi√©n se adapta seg√∫n el pa√≠s. As√≠, en 2018 y 2020 por regiones: 

- En 2018, en el √°rea Asia-Pacifico el n√∫mero de suscriptores era de 8958500 y en 2020 21163500. La variaci√≥n en esos tres a√±os fue de + 12205000.
- En 2018, en el √°rea Europa, Asia Central y √Åfrica el n√∫mero de suscriptores era de 33077500 y en 2020 60108500.La variaci√≥n en esos tres a√±os fue de + 27031000.
- En 2018, en el √°rea Am√©rica del Sur el n√∫mero de suscriptores era de 23561750 y en 2020 35193000. La variaci√≥n en esos tres a√±os fue de + 11631250.
- En 2018, en el √°rea Estados Unidos y Canad√° el n√∫mero de suscriptores era de 62636500 y en 2020 71436500. La variaci√≥n en esos tres a√±os fue de + 8800000.

Como se observa en el gr√°fico, la tendencia es creciente en todas las regiones siendo en Estados Unidos y en Canad√° el mayor n√∫mero de suscriptores. Si analizamos las variaciones, la regi√≥n que ha observado un mayor aumento es Europa, Asia Central y √Åfrica.

Tambi√©n, se pueden observan los suscriptores por trimestre de 2018 a 2020 con las mismas conclusiones.

> *"Netflix bate r√©cord de suscriptores: llega a los 247,1 millones tras sumar 8,8 millones de nuevos usuarios en 2023"* El Espa√±ol

------------------------------------------------------------------------

## 7.2 Ganancias de esta plataforma

En este caso, los datos sobre las ganancias est√°n para los 4 trimestres de 2018, los 4 trimestres de 2019 y para dos trimestres de 2020. As√≠, se puede calcular una media de los trimestres para cada a√±o, para as√≠ ver la evoluci√≥n de las ganancias de estos a√±os de forma din√°mica y animada. Pero tambi√©n, se puede observar la evoluci√≥n trimestral dado que de un trimestre a otro del mismo a√±o, las ganancias tambi√©n aumentan. Hay que tener en cuenta que el eje y del gr√°fico no comienza en 0, sino en aproximadamente 199 M.

::: panel-tabset
## Anual y din√°mico

```{r, message = FALSE, warning = FALSE}

#- gr√°fico para las ganancias anuales de NETFLIX. Pero primero modificar los datos.

data_revenue <- data.frame(
  Area = c("United States and Canada", "Latin America", "Europe, Middle East, and Africa", "Asia-Pacific"),
  Q1_2018 = c(1976157000, 540182000, 886649000, 199117000),
  Q2_2018 = c(2049546000, 568071000, 975497000, 221252000),
  Q3_2018 = c(2094850000, 562307000, 1004749000, 248691000),
  Q4_2018 = c(2160979000, 567137000, 1096812000, 276756000),
  Q1_2019 = c(2256851000, 630472000, 1233379000, 319602000),
  Q2_2019 = c(2501199000, 677136000, 1319087000, 349494000),
  Q3_2019 = c(2621250000, 741434000, 1428040000, 382304000),
  Q4_2019 = c(2671908000, 746392000, 1562561000, 418121000),
  Q1_2020 = c(2702776000, 793453000, 1723474000, 483660000),
  Q2_2020 = c(2839670000, 785368000, 1892537000, 569140000))

data_revenue <- data_revenue %>%
  pivot_longer(cols = starts_with("Q"), names_to = "Quarter", values_to = "Revenue") %>%
  mutate(Year = substr(Quarter, start = 4, stop = 7),
         Quarter = substr(Quarter, start = 1, stop = 2)) 

data_revenue1 <- data_revenue %>%
  group_by(Area, Year) %>%
  summarise(media_trimestral = mean(Revenue)) %>% 
  ungroup()

data_revenue1$Year <- as.Date(paste0(data_revenue1$Year, format = "-01-01"))
data_revenue1$Year <- as.Date(data_revenue1$Year, format = "%Y")

mis_colores <- c("United States and Canada" = "#98F5FF",
                 "Latin America" = "#FFA07A",
                 "Europe, Middle East, and Africa" = "#FF6EB4",
                 "Asia-Pacific" = "#00FF7F")

breaks <- seq(min(data_revenue1$Year), max(data_revenue1$Year), length.out = 3)

p8 <- ggplot(data_revenue1, aes(x = Year, y = media_trimestral, color = Area)) +
  geom_line(linewidth = 0.7) +
  labs(title = "Evoluci√≥n de las ganancias de Netflix por √Årea", 
       subtitle = "(2018-2020)",
       x = "A√±os", y = "Media Ingresos",
       color = "√Årea") +
  theme_minimal() + 
  scale_y_continuous(labels = scales::comma_format(scale = 1e-6, suffix = "M"),
                     breaks = seq(0, max(data_revenue$Revenue), by = 500000000)) +
  scale_color_manual(values = mis_colores) +
  scale_x_date(breaks = breaks, labels = format(breaks, "%Y")) + theme(plot.title = element_text(face = "bold"),
    legend.key = element_rect(fill = "lightcyan"),
    legend.background = element_rect(fill = "lightcyan")) + theme(axis.text = element_text(colour = "black"),
    axis.text.x = element_text(colour = "black"),
    axis.text.y = element_text(colour = "black"),
    legend.background = element_rect(colour = "white")) + theme(legend.key = element_rect(colour = "lightcyan")) + 
  transition_reveal(Year)

p8

```

## Trimestral y est√°tico
```{r, message = FALSE, warning = FALSE}

#- gr√°fico para las ganancias trimestrales de NETFLIX. Pero primero modificar los datos.

data_revenue <- data.frame(
  Area = c("United States and Canada", "Latin America", "Europe, Middle East, and Africa", "Asia-Pacific"),
  Q1_2018 = c(1976157000, 540182000, 886649000, 199117000),
  Q2_2018 = c(2049546000, 568071000, 975497000, 221252000),
  Q3_2018 = c(2094850000, 562307000, 1004749000, 248691000),
  Q4_2018 = c(2160979000, 567137000, 1096812000, 276756000),
  Q1_2019 = c(2256851000, 630472000, 1233379000, 319602000),
  Q2_2019 = c(2501199000, 677136000, 1319087000, 349494000),
  Q3_2019 = c(2621250000, 741434000, 1428040000, 382304000),
  Q4_2019 = c(2671908000, 746392000, 1562561000, 418121000),
  Q1_2020 = c(2702776000, 793453000, 1723474000, 483660000),
  Q2_2020 = c(2839670000, 785368000, 1892537000, 569140000))

data_revenue <- data_revenue %>%
  pivot_longer(cols = starts_with("Q"), names_to = "Quarter", values_to = "Revenue") %>%
  mutate(Year = substr(Quarter, start = 4, stop = 7),
         Quarter = substr(Quarter, start = 1, stop = 2)) 

data_revenue$Year <- as.Date(paste0(data_revenue$Year, format = "-01-01"))

p8 <- ggplot(data_revenue, aes(x = paste(Year, Quarter), y = Revenue, color = Area, group = Area)) +
  geom_line(linewidth = 0.7) +
  labs(title = "Evoluci√≥n trimestral de las ganancias de Netflix por √Årea", 
       subtitle = "(Trimestres 2018-2020)",
       x = "Trimestre del a√±o", y = "Ingresos",
       color = "√Årea") +
  theme_minimal() + 
  scale_y_continuous(labels = scales::comma_format(scale = 1e-6, suffix = "M"),
                     breaks = seq(0, max(data_revenue$Revenue), by = 500000000)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_color_manual(values = mis_colores) +
  scale_x_discrete(labels = c("1T 2018", "2T 2018", "3T 2018", "4T 2018",
                              "1T 2019", "2T 2019", "3T 2019", "4T 2019",
                              "1T 2020", "2T 2020")) +
  theme(plot.title = element_text(face = "bold"),
    legend.key = element_rect(fill = "lightcyan"),
    legend.background = element_rect(fill = "lightcyan")) + theme(axis.text = element_text(colour = "black"),
    axis.text.x = element_text(colour = "black"),
    axis.text.y = element_text(colour = "black"),
    legend.background = element_rect(colour = "white")) + theme(legend.key = element_rect(colour = "lightcyan")) 

p8

```
:::

------------------------------------------------------------------------

üí∞ Las ganancias de Netflix han ido aumentando considerablemente desde sus inicios y en concreto, en los a√±os analizados (2018-2020). Esta plataforma ha aumentando sus ganancias en todas las regiones. As√≠, en 2018 y 2020 por regiones: 

- En 2018, en el √°rea Asia-Pacifico las ganancias eran de 236454000 y en 2020 526400000. La variaci√≥n en esos tres a√±os fue de + 289946000.
- En 2018, en el √°rea Europa, Asia Central y √Åfrica las ganancias eran de 990926750 y en 2020 1808005500.La variaci√≥n en esos tres a√±os fue de + 817078750.
- En 2018, en el √°rea Am√©rica del Sur las ganancias eran de 559424250 y en 2020 789410500. La variaci√≥n en esos tres a√±os fue de + 229986250.
- En 2018, en el √°rea Estados Unidos y Canad√° las ganancias eran de 2070383000 y en 2020 2771223000. La variaci√≥n en esos tres a√±os fue de + 700840000.

Como se observa en el gr√°fico, la tendencia es creciente en todas las regiones siendo en Estados Unidos y en Canad√° el mayor n√∫mero de ganancias. Si analizamos las variaciones, la regi√≥n que ha observado un mayor aumento es Europa, Asia Central y √Åfrica (mayor n√∫mero de suscriptores indica mayores ganancias)

Tambi√©n, se pueden observan las ganancias por trimestre de 2018 a 2020 con las mismas conclusiones.

> *"La compa√±√≠a logr√≥ un beneficio neto de 1.677 millones de d√≥lares (1.594 millones de euros). Tambi√©n consigui√≥ unos ingresos de 8.542 millones de d√≥lares, lo que supone un aumento del 7,8% con respecto al tercer trimestre de 2022"* El Espa√±ol

> *"La plataforma de streaming Netflix tuvo su mayor ganancia en Bolsa en m√°s de dos a√±os, tras dar a conocer que agreg√≥ 8.8 millones de nuevos suscriptores en el tercer trimestre de 2023."* El Economista

------------------------------------------------------------------------

## Conclusi√≥n

Actualmente, existen muchas plataformas de streaming para elegir. Algunas variables a tener en cuenta para la elecci√≥n de estas son los precios, la cantidad de pel√≠culas o series disponibles, el idioma principal o la categor√≠a, como se ha analizado. Adem√°s, en todas ellas hay una variedad muy extensa de contenidos para poder elegir, por lo que la mayor√≠a tienen grandes ofertas de cat√°logos de series, pel√≠culas, documentales, producciones propias, animaci√≥n, contenido
infantil y dem√°s. 

As√≠ que la elecci√≥n de una plataforma de streaming depende de los intereses de cada uno; es m√°s una cuesti√≥n subjetiva. Y muchos consumidores disponen de varias plataformas de streaming contratadas al mismo tiempo. 

![Preferencias de las plataformas Streaming obtenido de Data wrapper](./imagenes/preferencias.png)

::: column-margin
![](./imagenes/palomitas.png){fig-align="center"}
:::

------------------------------------------------------------------------
<br>

Con esto acabo mi trabajo para BigData !! üé• üéûÔ∏è üé¨

<br>

------------------------------------------------------------------------

<br>

### Informaci√≥n sobre la sesi√≥n

Abajo muestro mi entorno de trabajo y paquetes utilizados

```{r}
#| echo: false
sessioninfo::session_info() %>% 
  details::details(summary = 'current session info') 
```
