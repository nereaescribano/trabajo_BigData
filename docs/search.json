[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Las plataformas de streaming",
    "section": "",
    "text": "Hola, soy Nerea Escribano Soria.\nEsta web sirve para presentar el trabajo final individual para la asignatura “Programación y manejo de datos en la era Del Big Data”, optativa de GECO en la Facultad de Economía de la Universitat de València.\nLa web de la asignatura está aquí y los trabajos de mis compañeros de curso puedes verlos aquí.\nMi trabajo lleva por título : “Análisis de las plataformas streaming”. El objetivo es analizar ciertas variables en cuatro plataformas de streaming: Amazon Prime, Netflix, Hulu y Disney +. Así, se podrá observar la evolución y realizar comparaciones entre estas plataformas\nEl trabajo puede verse aquí."
  },
  {
    "objectID": "my_trabajo_BigData.html",
    "href": "my_trabajo_BigData.html",
    "title": "Análisis de las plataformas de streaming",
    "section": "",
    "text": "Se va a realizar un análisis de diversas variables relacionadas con las principales plataformas de streaming 1 debido al crecimiento que han experimentado sobretodo en los últimos años. Las plataformas de streaming Netflix, Prime Video, Hulu y Disney+ ofrecen un gran catálogo de películas, series y documentales acumulando más de 160 millones de suscriptores en todo el mundo. Estas se han convertido en una parte crucial de la industria del entretenimiento y cada vez hay más variedad y más individuos que las eligen por su versatilidad y rapidez ya que se puede consumir en cualquier lugar del mundo y a cualquier hora.\nEn concreto, en este trabajo se va a analizar:\n\nEl número de películas que produce cada país disponibles en streaming.\nLa cantidad de películas disponibles en cada plataforma.\nEl idioma principal de las películas.\nLos diferentes grupos de edad recomendados en las películas de cada plataforma.\nLa categoría o género principal de las películas.\nLas películas mejor valoradas de cada plataforma.\nEl caso de Netflix.\n\n\n\nPlataformas Streaming\n\n\n⭐ Alguna información interesante para los precios de 2024 de las plataformas de streaming en España: aquí"
  },
  {
    "objectID": "my_trabajo_BigData.html#intro",
    "href": "my_trabajo_BigData.html#intro",
    "title": "Análisis de las plataformas de streaming",
    "section": "",
    "text": "Vamos a utilizar datos del paquete palmerpenguins. El repo del paquete en CRAN está aquí, el repo de Github está aquí y la página web del paquete está aquí.\nLos datos se pueden cargar en la memoria de de R/RStudio de esta forma:\n\nCódigo# install.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\ndf &lt;- palmerpenguins::penguins\n\n\nEl dataset contiene observaciones sobre un conjunto de 344 pingüinos de 3 especies. Hay 8 variables."
  },
  {
    "objectID": "my_trabajo_BigData.html#los-pingüinos-molan",
    "href": "my_trabajo_BigData.html#los-pingüinos-molan",
    "title": "Análisis de las plataformas de streaming",
    "section": "Los pingüinos molan",
    "text": "Los pingüinos molan\nVamos a ver una foto de un pingüinos\n\n\nUn pingüino chulo\n\n\nSí, lo pingüinos molan, así que vamos a poner otra foto de pingüinos que tenemos en nuestro PC pero la vamos a poner en el margen:"
  },
  {
    "objectID": "my_trabajo_BigData.html#algunos-gráficos",
    "href": "my_trabajo_BigData.html#algunos-gráficos",
    "title": "Análisis de las plataformas de streaming",
    "section": "Algunos gráficos",
    "text": "Algunos gráficos\nBueno pues vamos a hacer algún gráfico, pero claro antes he de cargar los paquetes\n\nCódigolibrary(tidyverse)\n\n\nArreglo los datos\n\nCódigo#- cojos datos de pingüinos y arreglo un poco \ndf &lt;- palmerpenguins::penguins %&gt;% \n  dplyr::select(species, bill_depth_mm, body_mass_g) %&gt;% \n  tidyr::drop_na()\n\n\n\nPrimer gráfico\n\nCódigo#- primer gráfico\np &lt;- ggplot(data = df, \n       mapping = aes(x = bill_depth_mm, y = body_mass_g, color = species)) +\n     geom_point()\np\n\n\n\n\n\n\n\nSegundo\n\nCódigo#- segundo gráfico\np &lt;- p + geom_smooth(method = \"lm\", se = FALSE) \n\np\n\n\n\n\n\n\n\nEl último\n\nCódigo#- tercer gráfico\np + geom_smooth(method = \"lm\", se = FALSE, color = \"black\") \n\n\n\n\n\n\n\n\nCon esto acabo mi trabajo para BigData !! 🎥 🎞️ 🎬\n\n\n\nInformación sobre la sesión\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n current session info \n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Sonoma 14.1.1\n system   x86_64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Madrid\n date     2024-01-18\n pandoc   3.1.1 @ /private/var/folders/v6/3rk9f0w97938t5mvp3nk7b780000gn/T/AppTranslocation/F35F8806-1B6F-4ED9-AB55-6E033EEBFD62/d/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package        * version  date (UTC) lib source\n bit              4.0.5    2022-11-15 [1] CRAN (R 4.3.0)\n bit64            4.0.5    2020-08-30 [1] CRAN (R 4.3.0)\n cli              3.6.1    2023-03-23 [1] CRAN (R 4.3.0)\n clipr            0.8.0    2022-02-22 [1] CRAN (R 4.3.0)\n colorspace       2.1-0    2023-01-23 [1] CRAN (R 4.3.0)\n crayon           1.5.2    2022-09-29 [1] CRAN (R 4.3.0)\n crosstalk        1.2.0    2021-11-04 [1] CRAN (R 4.3.0)\n data.table       1.14.8   2023-02-17 [1] CRAN (R 4.3.0)\n desc             1.4.2    2022-09-08 [1] CRAN (R 4.3.0)\n details          0.3.0    2022-03-27 [1] CRAN (R 4.3.0)\n digest           0.6.33   2023-07-07 [1] CRAN (R 4.3.0)\n dplyr          * 1.1.4    2023-11-17 [1] CRAN (R 4.3.0)\n ellipsis         0.3.2    2021-04-29 [1] CRAN (R 4.3.0)\n evaluate         0.21     2023-05-05 [1] CRAN (R 4.3.0)\n fansi            1.0.5    2023-10-08 [1] CRAN (R 4.3.0)\n farver           2.1.1    2022-07-06 [1] CRAN (R 4.3.0)\n fastmap          1.1.1    2023-02-24 [1] CRAN (R 4.3.0)\n forcats        * 1.0.0    2023-01-29 [1] CRAN (R 4.3.0)\n formatR          1.14     2023-01-17 [1] CRAN (R 4.3.0)\n generics         0.1.3    2022-07-05 [1] CRAN (R 4.3.0)\n gganimate      * 1.0.8    2022-09-08 [1] CRAN (R 4.3.0)\n ggplot2        * 3.4.4    2023-10-12 [1] CRAN (R 4.3.0)\n ggThemeAssist  * 0.1.5    2016-08-13 [1] CRAN (R 4.3.0)\n ggthemes       * 4.2.4    2021-01-20 [1] CRAN (R 4.3.0)\n gifski           1.12.0-2 2023-08-12 [1] CRAN (R 4.3.0)\n glue             1.6.2    2022-02-24 [1] CRAN (R 4.3.0)\n gtable           0.3.4    2023-08-21 [1] CRAN (R 4.3.0)\n here             1.0.1    2020-12-13 [1] CRAN (R 4.3.0)\n hms              1.1.3    2023-03-21 [1] CRAN (R 4.3.0)\n htmltools        0.5.6    2023-08-10 [1] CRAN (R 4.3.0)\n htmlwidgets      1.6.2    2023-03-17 [1] CRAN (R 4.3.0)\n httpuv           1.6.11   2023-05-11 [1] CRAN (R 4.3.0)\n httr             1.4.7    2023-08-15 [1] CRAN (R 4.3.0)\n jsonlite         1.8.7    2023-06-29 [1] CRAN (R 4.3.0)\n knitr            1.43     2023-05-25 [1] CRAN (R 4.3.0)\n labeling         0.4.3    2023-08-29 [1] CRAN (R 4.3.0)\n later            1.3.1    2023-05-02 [1] CRAN (R 4.3.0)\n lattice          0.21-8   2023-04-05 [1] CRAN (R 4.3.1)\n lazyeval         0.2.2    2019-03-15 [1] CRAN (R 4.3.0)\n lifecycle        1.0.4    2023-11-07 [1] CRAN (R 4.3.0)\n lubridate      * 1.9.2    2023-02-10 [1] CRAN (R 4.3.0)\n magrittr         2.0.3    2022-03-30 [1] CRAN (R 4.3.0)\n Matrix           1.6-1.1  2023-09-18 [1] CRAN (R 4.3.0)\n mgcv             1.8-42   2023-03-02 [1] CRAN (R 4.3.1)\n mime             0.12     2021-09-28 [1] CRAN (R 4.3.0)\n miniUI           0.1.1.1  2018-05-18 [1] CRAN (R 4.3.0)\n munsell          0.5.0    2018-06-12 [1] CRAN (R 4.3.0)\n nlme             3.1-162  2023-01-31 [1] CRAN (R 4.3.1)\n palmerpenguins   0.1.1    2022-08-15 [1] CRAN (R 4.3.0)\n patchwork      * 1.1.3    2023-08-14 [1] CRAN (R 4.3.0)\n pillar           1.9.0    2023-03-22 [1] CRAN (R 4.3.0)\n pkgconfig        2.0.3    2019-09-22 [1] CRAN (R 4.3.0)\n plotly         * 4.10.2   2023-06-03 [1] CRAN (R 4.3.0)\n png              0.1-8    2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits      1.1.1    2020-01-24 [1] CRAN (R 4.3.0)\n progress         1.2.2    2019-05-16 [1] CRAN (R 4.3.0)\n promises         1.2.1    2023-08-10 [1] CRAN (R 4.3.0)\n purrr          * 1.0.2    2023-08-10 [1] CRAN (R 4.3.0)\n R.methodsS3      1.8.2    2022-06-13 [1] CRAN (R 4.3.0)\n R.oo             1.25.0   2022-06-12 [1] CRAN (R 4.3.0)\n R.utils          2.12.2   2022-11-11 [1] CRAN (R 4.3.0)\n R6               2.5.1    2021-08-19 [1] CRAN (R 4.3.0)\n Rcpp             1.0.11   2023-07-06 [1] CRAN (R 4.3.0)\n readr          * 2.1.4    2023-02-10 [1] CRAN (R 4.3.0)\n rio            * 1.0.1    2023-09-19 [1] CRAN (R 4.3.0)\n rlang            1.1.2    2023-11-04 [1] CRAN (R 4.3.0)\n rmarkdown        2.24     2023-08-14 [1] CRAN (R 4.3.0)\n rprojroot        2.0.3    2022-04-02 [1] CRAN (R 4.3.0)\n rstudioapi       0.15.0   2023-07-07 [1] CRAN (R 4.3.0)\n scales           1.2.1    2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo      1.2.2    2021-12-06 [1] CRAN (R 4.3.0)\n shiny            1.7.5.1  2023-10-14 [1] CRAN (R 4.3.0)\n stringi          1.8.2    2023-11-23 [1] CRAN (R 4.3.0)\n stringr        * 1.5.1    2023-11-14 [1] CRAN (R 4.3.0)\n tibble         * 3.2.1    2023-03-20 [1] CRAN (R 4.3.0)\n tidyr          * 1.3.0    2023-01-24 [1] CRAN (R 4.3.0)\n tidyselect       1.2.0    2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse      * 2.0.0    2023-02-22 [1] CRAN (R 4.3.0)\n timechange       0.2.0    2023-01-11 [1] CRAN (R 4.3.0)\n tweenr           2.0.2    2022-09-06 [1] CRAN (R 4.3.0)\n tzdb             0.4.0    2023-05-12 [1] CRAN (R 4.3.0)\n utf8             1.2.4    2023-10-22 [1] CRAN (R 4.3.0)\n vctrs            0.6.4    2023-10-12 [1] CRAN (R 4.3.0)\n viridisLite      0.4.2    2023-05-02 [1] CRAN (R 4.3.0)\n withr            2.5.2    2023-10-30 [1] CRAN (R 4.3.0)\n xfun             0.40     2023-08-09 [1] CRAN (R 4.3.0)\n xml2             1.3.5    2023-07-06 [1] CRAN (R 4.3.0)\n xtable           1.8-4    2019-04-21 [1] CRAN (R 4.3.0)\n yaml             2.3.7    2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "my_trabajo_BigData.html#introducción",
    "href": "my_trabajo_BigData.html#introducción",
    "title": "Análisis de las plataformas de streaming",
    "section": "",
    "text": "Se va a realizar un análisis de diversas variables relacionadas con las principales plataformas de streaming 1 debido al crecimiento que han experimentado sobretodo en los últimos años. Las plataformas de streaming Netflix, Prime Video, Hulu y Disney+ ofrecen un gran catálogo de películas, series y documentales acumulando más de 160 millones de suscriptores en todo el mundo. Estas se han convertido en una parte crucial de la industria del entretenimiento y cada vez hay más variedad y más individuos que las eligen por su versatilidad y rapidez ya que se puede consumir en cualquier lugar del mundo y a cualquier hora.\nEn concreto, en este trabajo se va a analizar:\n\nEl número de películas que produce cada país disponibles en streaming.\nLa cantidad de películas disponibles en cada plataforma.\nEl idioma principal de las películas.\nLos diferentes grupos de edad recomendados en las películas de cada plataforma.\nLa categoría o género principal de las películas.\nLas películas mejor valoradas de cada plataforma.\nEl caso de Netflix.\n\n\n\nPlataformas Streaming\n\n\n⭐ Alguna información interesante para los precios de 2024 de las plataformas de streaming en España: aquí"
  },
  {
    "objectID": "my_trabajo_BigData.html#obtención-de-datos",
    "href": "my_trabajo_BigData.html#obtención-de-datos",
    "title": "Análisis de las plataformas de streaming",
    "section": "Obtención de datos",
    "text": "Obtención de datos\n\n\nDatos utilizados\nCódigos\n\n\n\nLos datos se pueden obtener de la web Kaggle donde hay gran diversidad de datos. He seleccionado varios conjuntos de datos para tener variedad en cuanto a plataformas, géneros de las producciones, países con más volumen de producciones, títulos de series o películas con su popularidad, número de temporadas o donde están disponibles, ganancias, suscriptores… El año analizado de la mayoría de los datos es 2022.\n\nEl dataset df_stream_kaggle.csv contiene 18719 observaciones sobre un conjunto de 22 columnas.\nEl dataset df_movies_streaming_platforms_2022.csv contiene 9515 observaciones sobre un conjunto de 11 columnas.\nEl dataset df_moviestreams.csv contiene 16744 observaciones sobre un conjunto de 17 columnas.\nEl dataset df_netflix_subscribers.csv contiene 4 observaciones sobre un conjunto de 11 columnas.\nEl dataset df_netflix_revenue.csv contiene 4 observaciones sobre un conjunto de 11 columnas.\n\n\n\n\nCódigo\n# Estos son los paquetes que he utilizado:\n\n#| eval: true\nlibrary(rio)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(ggThemeAssist)\nlibrary(plotly)\nlibrary(gganimate)\nlibrary(patchwork)\nlibrary(RColorBrewer)\nlibrary(wordcloud)\nlibrary(knitr)\nlibrary(kableExtra)\n\n# Cargamos todos los datos que voy a utilizar:\n\narchivo_de_destino &lt;- here::here(\"datos\", \"df_stream_kaggle.csv\")\ndf_stream_kaggle &lt;- rio::import(archivo_de_destino)\n\narchivo_de_destino &lt;- here::here(\"datos\", \"df_movies_streaming_platforms_2022.csv\")\ndf_movies_streaming_platforms_2022 &lt;- rio::import(archivo_de_destino)\n\narchivo_de_destino &lt;- here::here(\"datos\", \"df_moviestreams.csv\")\ndf_moviestreams &lt;- rio::import(archivo_de_destino)\n\narchivo_de_destino &lt;- here::here(\"datos\", \"df_netflix_subscribers.csv\")\ndf_netflix_subscribers &lt;- rio::import(archivo_de_destino)  \n\narchivo_de_destino &lt;- here::here(\"datos\", \"df_netflix_revenue.csv\")\ndf_netflix_revenue &lt;- rio::import(archivo_de_destino)"
  },
  {
    "objectID": "my_trabajo_BigData.html#cantidad-de-películas-disponibles-en-las-plataformas-de-streaming-principales",
    "href": "my_trabajo_BigData.html#cantidad-de-películas-disponibles-en-las-plataformas-de-streaming-principales",
    "title": "Análisis de las plataformas de streaming",
    "section": "2. Cantidad de películas disponibles en las plataformas de streaming principales",
    "text": "2. Cantidad de películas disponibles en las plataformas de streaming principales\n\nCódigo\n#- Convertimos las columnas en numeric, quitamos NA y contamos el número de películas disponibles para cada servicio de streaming creando una columna para ello y el gráfico de barras plotly.\n\nstreaming_platforms_2022 &lt;- read.csv(file = 'datos/df_movies_streaming_platforms_2022.csv')\nstreaming_platforms_separado &lt;- streaming_platforms_2022 %&gt;% separate(col = Rotten.Tomatoes, \n                                                        into = c(\"score\", \"borrar\"),\n                                                        sep  = \"/\") %&gt;% select(-borrar) \n\nstreaming_platforms_separado$score &lt;- as.numeric(streaming_platforms_separado$score) \nstreaming_platforms_separado = streaming_platforms_separado %&gt;% drop_na() %&gt;% mutate(plataformas = ifelse(Netflix == 1, \"netflix\",\n                                                                                ifelse(Hulu == 1, \"hulu\",\n                                                                                       ifelse(Prime.Video == 1, \"prime\",\n                                                                                              ifelse(Disney. == 1, \"disney\", \"ups\")))))  \n                \ncantidad_de_peliculas =  streaming_platforms_separado %&gt;% count(plataformas, name = \"cantidad\")\n\np2 &lt;- ggplot(cantidad_de_peliculas, aes(x = plataformas, y = cantidad, fill = plataformas)) + \ngeom_bar(stat = \"identity\") + \n  scale_fill_manual(values = c(\"#0000CD\", \"#00FF7F\", \"#FF0000\", \"#63B8FF\")) +\n  labs(title = \"Cantidad de películas en cada servicio de streaming\",\n       subtitle = \"en 2022\",\n       x = \"Plataforma\",\n       y = \"Cantidad\") +\n  theme_minimal() + \n  theme(panel.grid.major = element_line(colour = \"white\"),\n    panel.grid.minor = element_line(colour = \"white\"),\n    axis.text.x = element_text(family = \"mono\"),\n    axis.text.y = element_text(family = \"mono\"))\n\nplotly::ggplotly(p2)\n\n\n\n\n\n\nSe observa así que las plataformas en 2022 con más películas fueron en primer lugar, Prime video y en segundo lugar, Netflix con gran diferencia frente Disney + y Hulu y esto podría ser debido a que son más conocidas y en la mayoría de países se pueden contratar. Aunque estas cifras suelen variar debido a que el catálogo de películas ofrecido para cada país puede variar y recientemente todas han experimentado un aumento de sus producciones y Disney + ha aumentado su catálogo.\nCabe indicar que la creación y fundación de cada compañía y primer año de operación fueron 2006 para Prime Video, 1997 para Netflix, 2007 para Hulu y 2019 para Disney +."
  },
  {
    "objectID": "my_trabajo_BigData.html#edades",
    "href": "my_trabajo_BigData.html#edades",
    "title": "Análisis de las plataformas de streaming",
    "section": "Edades",
    "text": "Edades"
  },
  {
    "objectID": "my_trabajo_BigData.html#películas-más-famosas-en-cada-plataforma",
    "href": "my_trabajo_BigData.html#películas-más-famosas-en-cada-plataforma",
    "title": "Análisis de las plataformas de streaming",
    "section": "6. Películas más famosas en cada plataforma",
    "text": "6. Películas más famosas en cada plataforma\nEn cuanto a las películas, estas se pueden valorar en este data frame a través del IMDb score y IMDb votes 2, TMDb score y TMDb votes. Las cinco películas que han recibido un mayor número de votos de cada plataforma y así, un IMDb score mayor de entre estas en cada plataforma son las siguientes. Hay que tener en cuenta que se está realizando la tabla por orden descendente de mayor votos en función del IMDb votes siendo la primera película que más votos ha recibido.\n6.1 Para Amazon, el ranking de películas mejor valoradas es Titanic (1133692 votos y 7.9 score), The Usual Suspects (1059480 votos y 8.5 score), Braveheart (1016629 votos y 8.4 score), The Sixth Sense (967864 votos y 8.2 score) y The Terminator (841706 votos y 8.1 score).\n\nCódigo\n#- filtramos por la plataforma seleccionada, ordenamos por la variable IMDB votes de mayor a menor y seleccionamos las 5 películas mejor valoradas junto a las variables indicadas. Se realiza una tabla y modificamos la estética.\n\ntop_películas_plataformas &lt;- df_stream_kaggle %&gt;%\n  filter(streaming_service %in% c(\"amazon\")) %&gt;%\n  arrange(desc(imdb_votes))  %&gt;%\n  select(streaming_service, title, release_year, runtime, imdb_score, imdb_votes) %&gt;%\n  group_by(streaming_service) %&gt;%\n  slice_head(n = 5)\n\ntabla_amazon &lt;- kable(\n    head(top_películas_plataformas),\n    caption = paste(\"Top 5 películas de Amazon\"),\n    col.names = c(\"Plataforma\", \"Nombre\", \"Año\", \"Duración minutos\", \"IMDb Score\", \"IMDb Votes\")\n  ) %&gt;%\n    kable_styling(full_width = FALSE, position = \"center\") %&gt;%\n    row_spec(0, background = \"#63B8FF\") %&gt;%\n  column_spec(c(5), background = \"#CAFF70\", color = \"black\") %&gt;%\n  column_spec(c(1, 2, 3, 4, 6), background = \"#F0FFFF\", color = \"black\")\n\ntabla_amazon\n\n\nTop 5 películas de Amazon\n\nPlataforma\nNombre\nAño\nDuración minutos\nIMDb Score\nIMDb Votes\n\n\n\namazon\nTitanic\n1997\n194\n7.9\n1133692\n\n\namazon\nThe Usual Suspects\n1995\n106\n8.5\n1059480\n\n\namazon\nBraveheart\n1995\n177\n8.4\n1016629\n\n\namazon\nThe Sixth Sense\n1999\n107\n8.2\n967864\n\n\namazon\nThe Terminator\n1984\n108\n8.1\n841706\n\n\n\n\n\n6.2 Para Netflix, el ranking de películas mejor valoradas es Inception (2294231 votos y 8.8 score), Forrest Gump (2021343 votos y 8.8 score), The Dark Knight Rises (1669067 votos y 8.4 score), Se7en (1606270 votos y 8.6 score) y Django Unchained (1472668 votos y 8.4 score).\n\nCódigo\ntop_películas_plataformas &lt;- df_stream_kaggle %&gt;%\n  filter(streaming_service %in% c(\"netflix\")) %&gt;%\n  arrange(desc(imdb_votes)) %&gt;%\n  select(streaming_service, title, release_year, runtime, imdb_score, imdb_votes) %&gt;%\n  group_by(streaming_service) %&gt;%\n  slice_head(n = 5)\n\ntabla_netflix &lt;- kable(\n    head(top_películas_plataformas),\n    caption = paste(\"Top 5 películas de Netflix\"),\n    col.names = c(\"Plataforma\", \"Nombre\", \"Año\", \"Duración minutos\", \"IMDb Score\", \"IMDb Votes\")\n  ) %&gt;%\n    kable_styling(full_width = FALSE, position = \"center\") %&gt;%\n    row_spec(0, background = \"#FF0000\") %&gt;%\n  column_spec(c(5), background = \"#CAFF70\", color = \"black\") %&gt;%\n  column_spec(c(1, 2, 3, 4, 6), background = \"#F0FFFF\", color = \"black\")\n\ntabla_netflix\n\n\nTop 5 películas de Netflix\n\nPlataforma\nNombre\nAño\nDuración minutos\nIMDb Score\nIMDb Votes\n\n\n\nnetflix\nInception\n2010\n148\n8.8\n2294231\n\n\nnetflix\nForrest Gump\n1994\n142\n8.8\n2021343\n\n\nnetflix\nThe Dark Knight Rises\n2012\n165\n8.4\n1669067\n\n\nnetflix\nSe7en\n1995\n127\n8.6\n1606270\n\n\nnetflix\nDjango Unchained\n2012\n165\n8.4\n1472668\n\n\n\n\n\n6.3 Para Hulu, el ranking de películas mejor valoradas es Deadpool (996056 votos y 8.0 score), A Beautiful Mind (909359 votos y 8.2 score), Black Swan (745933 votos y 8.0 score), Parasite (742045 votos y 8.5 score) y Prisoners (679548 votos y 8.1 score).\n\nCódigo\ntop_películas_plataformas &lt;- df_stream_kaggle %&gt;%\n  filter(streaming_service %in% c(\"hulu\")) %&gt;%\n  arrange(desc(imdb_votes)) %&gt;%\n  select(streaming_service, title, release_year, runtime, imdb_score, imdb_votes) %&gt;%\n  group_by(streaming_service) %&gt;%\n  slice_head(n = 5) \n \ntabla_hulu &lt;- kable(\n    head(top_películas_plataformas),\n    caption = paste(\"Top 5 películas de Hulu\"),\n    col.names = c(\"Plataforma\", \"Nombre\", \"Año\", \"Duración minutos\", \"IMDb Score\", \"IMDb Votes\")\n  ) %&gt;%\n    kable_styling(full_width = FALSE, position = \"center\") %&gt;%\n    row_spec(0, background = \"#00FF7F\") %&gt;%\n    column_spec(c(5), background = \"#CAFF70\", color = \"black\") %&gt;%\n  column_spec(c(1, 2, 3, 4, 6), background = \"#F0FFFF\", color = \"black\")\n\ntabla_hulu\n\n\nTop 5 películas de Hulu\n\nPlataforma\nNombre\nAño\nDuración minutos\nIMDb Score\nIMDb Votes\n\n\n\nhulu\nDeadpool\n2016\n108\n8.0\n996056\n\n\nhulu\nA Beautiful Mind\n2001\n135\n8.2\n909359\n\n\nhulu\nBlack Swan\n2010\n108\n8.0\n745933\n\n\nhulu\nParasite\n2019\n132\n8.5\n742045\n\n\nhulu\nPrisoners\n2013\n153\n8.1\n679548\n\n\n\n\n\n6.4 Para Disney +, el ranking de películas mejor valoradas es The Avengers (1353907 votos y 8.0 score), Star Wars (1321489 votos y 8.6 score), The Empire Strikes Back (1248319 votos y 8.7 score), Avatar (1193331 votos y 7.8 score) y Guardians of the Galaxy (1125382 votos y 8.0 score).\n\nCódigo\ntop_películas_plataformas &lt;- df_stream_kaggle %&gt;%\n  filter(streaming_service %in% c(\"disney\")) %&gt;%\n  arrange(desc(imdb_votes)) %&gt;%\n  select(streaming_service, title, release_year, runtime, imdb_score, imdb_votes) %&gt;%\n  group_by(streaming_service) %&gt;%\n  slice_head(n = 5)\n \ntabla_disney &lt;- kable(\n    head(top_películas_plataformas),\n    caption = paste(\"Top 5 películas de Disney +\"),\n    col.names = c(\"Plataforma\", \"Nombre\", \"Año\", \"Duración minutos\", \"IMDb Score\", \"IMDb Votes\")\n  ) %&gt;%\n    kable_styling(full_width = FALSE, position = \"center\") %&gt;%\n    row_spec(0, background = \"#0000CD\") %&gt;%\n  column_spec(c(5), background = \"#CAFF70\", color = \"black\") %&gt;%\n  column_spec(c(1, 2, 3, 4, 6), background = \"#F0FFFF\", color = \"black\")\n\ntabla_disney\n\n\nTop 5 películas de Disney +\n\nPlataforma\nNombre\nAño\nDuración minutos\nIMDb Score\nIMDb Votes\n\n\n\ndisney\nThe Avengers\n2012\n143\n8.0\n1353907\n\n\ndisney\nStar Wars\n1977\n125\n8.6\n1321489\n\n\ndisney\nThe Empire Strikes Back\n1980\n124\n8.7\n1248319\n\n\ndisney\nAvatar\n2009\n165\n7.8\n1193331\n\n\ndisney\nGuardians of the Galaxy\n2014\n120\n8.0\n1125382"
  },
  {
    "objectID": "my_trabajo_BigData.html#países-que-realizan-un-mayor-número-de-producción-de-películas-en-las-plataformas-de-streaming.",
    "href": "my_trabajo_BigData.html#países-que-realizan-un-mayor-número-de-producción-de-películas-en-las-plataformas-de-streaming.",
    "title": "Análisis de las plataformas de streaming",
    "section": "1. Países que realizan un mayor número de producción de películas en las plataformas de streaming.",
    "text": "1. Países que realizan un mayor número de producción de películas en las plataformas de streaming.\n\nCódigo\n#- Gráfico dividido según tamaño en cuanto al número de producción de películas disponibles en streaming para cada país.\n\ndf_stream_kaggle_paises &lt;- df_stream_kaggle %&gt;%\n  separate_rows(production_countries, sep = \",\") %&gt;%\n  filter(production_countries != \"\") %&gt;%\n  count(production_countries) %&gt;%\n  arrange(desc(n))  \n\nplot_ly(data = df_stream_kaggle_paises, \n        labels = ~production_countries, \n        parents = ~\"\", \n        values = ~n, \n        type = 'treemap') %&gt;% \n  layout(title = \"Número de producciones realizadas por cada país\")\n\n\n\n\n\n\nEn este gráfico se pueden observar el número de producciones para plataformas de streaming realizadas por cada país (eliminando las producciones que son realizadas simultáneamente por diversos países). Los países donde más producciones se realizan son Estados Unidos con 12253 y siguiéndole India con 1544, Gran Bretaña con 1533, Canadá con 899 y Francia con 672. Esta información tiene relación con que los países del ranking son los que destacan en general por su producción de filmes y que tienen mayor impacto por su gran recaudación en ingresos de cada película.\nSi se busca España en el conjunto de datos, este país ha realizado 294 producciones.\n\n🗺️ Información interesante sobre las películas nacionales favoritas de cada país: aquí"
  },
  {
    "objectID": "my_trabajo_BigData.html#caso-concreto-de-netflix",
    "href": "my_trabajo_BigData.html#caso-concreto-de-netflix",
    "title": "Análisis de las plataformas de streaming",
    "section": "7. Caso concreto de NETFLIX",
    "text": "7. Caso concreto de NETFLIX\nNetflix, Inc es una compañía creada en 1997 con sede en Estados Unidos. La compañía se define en su reporte anual a los inversores como “uno de los líderes mundiales del entretenimiento con aproximadamente 222 millones de suscriptores en alrededor de 190 países con series de televisión, documentales, largometrajes y juegos de móviles a través de una gran variedad de géneros e idiomas” (Netflix, 2022).\nSu estrategia consiste en incrementar el número de suscriptores globalmente y continuamente están mejorando la experiencia de la plataforma a través de la expansión continua de su contenido que atrae a nuevos miembros y hace que los antiguos permanezcan (Netflix, 2022). Además, Netflix no solo ofrece series y películas ajenas (cuyas licencias obtiene) sino que se encarga de producir sus propias licencias.\n\n\n\nNETFLIX"
  },
  {
    "objectID": "my_trabajo_BigData.html#idiomas",
    "href": "my_trabajo_BigData.html#idiomas",
    "title": "Análisis de las plataformas de streaming",
    "section": "Idiomas",
    "text": "Idiomas\n\nCódigo\n#- Primero convertimos los espacios vacíos en NA y los eliminamos, realizamos un recuento de los idiomas de las películas y seleccionamos los 10 idiomas más utilizados. En el data frame idiomas, se observa el número de películas en cada idioma. Y el gráfico está en % calculados a partir de los datos. Ajustamos texto, valores, colores y leyenda para el gráfico.\n\ndf_moviestreams &lt;- df_moviestreams %&gt;%\n  mutate(Language = as.character(na_if(Language, \"\")))\n\nidiomas &lt;- df_moviestreams %&gt;%\n  filter(!is.na(Language)) %&gt;%\n  group_by(Language) %&gt;%\n  summarise(count = n()) %&gt;%\n  arrange(desc(count)) %&gt;%\n  top_n(10)\n\np3 &lt;- plot_ly(idiomas, labels = ~Language, values = ~count, type = \"pie\", \n              text = ~ifelse(count &gt; max(count) * 0.05, paste0(Language, \"&lt;br&gt;\", round(count / sum(count) * 100, 1), \"%\"), \"\"),\n              width = 800, height = 450) %&gt;%\n  layout(\n    margin = list(l = 0, r = 0, b = 0, t = 50), \n    showlegend = TRUE, \n    legend = list(x = 0.05, y = 0.9),\n    annotations = list(\n      x = 0.95,  \n      y = 1,\n      text = \"Idiomas más utilizados en las películas\",\n      showarrow = FALSE,\n      xref = \"paper\",\n      yref = \"paper\")) %&gt;%\n  add_trace(\n    hoverinfo = 'label+percent', \n    textposition = 'outside',\n    marker = list(\n      colors = c(\"#98F5FF\", \"#FF6A6A\", \"#C1FFC1\", \"#FF6EB4\", \"#FFF0F5\", \"chocolate1\", \"red\", \"violet\", \"yellow\", \"grey\"),\n      line = list(color = 'black', width = 2)))\n\np3\n\n\n\n\n\n\nSe observa en este gráfico para el conjunto de plataformas de streaming analizadas: Netflix, Hulu, Prime Video y Disney que la mayoría de películas tienen como idioma principal el inglés (84,90 % = 10955 películas). Siguiéndole pero en menor proporción, está el hindi (3,90 % = 503 películas), el inglés y el español (2,14 % = 276 películas) y el español (2,07 % = 267 películas). Este hecho tiene gran relación con que el mayor número de producciones de películas sea Estados Unidos, cuyo idioma principal es el inglés, como se ha analizado en el primer gráfico."
  },
  {
    "objectID": "my_trabajo_BigData.html#edad-recomendada-para-películas-de-cada-plataforma-de-streaming",
    "href": "my_trabajo_BigData.html#edad-recomendada-para-películas-de-cada-plataforma-de-streaming",
    "title": "Análisis de las plataformas de streaming",
    "section": "Edad recomendada para películas de cada plataforma de streaming",
    "text": "Edad recomendada para películas de cada plataforma de streaming\nPara 2022, si analizamos el conjunto de películas de cada plataforma y a partir de la edad recomendada, se puede analizar"
  },
  {
    "objectID": "my_trabajo_BigData.html#división-por-idioma-principal-para-las-películas-disponibles-en-streaming",
    "href": "my_trabajo_BigData.html#división-por-idioma-principal-para-las-películas-disponibles-en-streaming",
    "title": "Análisis de las plataformas de streaming",
    "section": "3. División por idioma principal para las películas disponibles en streaming",
    "text": "3. División por idioma principal para las películas disponibles en streaming\n\nCódigo\n#- Primero convertimos los espacios vacíos en NA y los eliminamos, realizamos un recuento de los idiomas de las películas y seleccionamos los 10 idiomas más utilizados. En el data frame idiomas, se observa el número de películas en cada idioma. Y el gráfico está en % calculados a partir de los datos. Ajustamos texto, valores, colores y leyenda para el gráfico.\n\ndf_moviestreams &lt;- df_moviestreams %&gt;%\n  mutate(Language = as.character(na_if(Language, \"\")))\n\nidiomas &lt;- df_moviestreams %&gt;%\n  filter(!is.na(Language)) %&gt;%\n  group_by(Language) %&gt;%\n  summarise(count = n()) %&gt;%\n  arrange(desc(count)) %&gt;%\n  top_n(10)\n\np3 &lt;- plot_ly(idiomas, labels = ~Language, values = ~count, type = \"pie\", \n              text = ~ifelse(count &gt; max(count) * 0.05, paste0(Language, \"&lt;br&gt;\", round(count / sum(count) * 100, 1), \"%\"), \"\"),\n              width = 800, height = 450) %&gt;%\n  layout(\n    margin = list(l = 0, r = 0, b = 0, t = 50), \n    showlegend = TRUE, \n    legend = list(x = 0.05, y = 0.9),\n    annotations = list(\n      x = 0.95,  \n      y = 1,\n      text = \"Idiomas más utilizados en las películas\",\n      showarrow = FALSE,\n      xref = \"paper\",\n      yref = \"paper\")) %&gt;%\n  add_trace(\n    hoverinfo = 'label+percent', \n    textposition = 'outside',\n    marker = list(\n      colors = c(\"#98F5FF\", \"#FF6A6A\", \"#C1FFC1\", \"#FF6EB4\", \"#FFF0F5\", \"chocolate1\", \"red\", \"violet\", \"yellow\", \"grey\"),\n      line = list(color = 'black', width = 2)))\n\np3\n\n\n\n\n\n\nSe observa en este gráfico para el conjunto de plataformas de streaming analizadas: Netflix, Hulu, Prime Video y Disney que la mayoría de películas tienen como idioma principal el inglés (84,90 % = 10955 películas). Siguiéndole pero en menor proporción, está el hindi (3,90 % = 503 películas), el inglés y el español (2,14 % = 276 películas) y el español (2,07 % = 267 películas). Este hecho tiene gran relación con que el mayor número de producciones de películas sea Estados Unidos, cuyo idioma principal es el inglés, como se ha analizado en el primer gráfico.\nAsimismo, el inglés y el español están entre los idiomas más hablados del mundo con aproximadamente 1,452 millones y 548 millones de hablantes respectivamente."
  },
  {
    "objectID": "my_trabajo_BigData.html#división-por-plataforma-y-edad-recomendada",
    "href": "my_trabajo_BigData.html#división-por-plataforma-y-edad-recomendada",
    "title": "Análisis de las plataformas de streaming",
    "section": "4.1 División por plataforma y edad recomendada",
    "text": "4.1 División por plataforma y edad recomendada\n\nCódigo\n#- Primero convertimos los espacios vacíos en NA y los eliminamos, realizamos un recuento por recomendación de mínimo de edad para ver las películas en cada plataforma de streaming creando la columna Platform. Si quisieramos solo ver una plataforma y sus rangos de edad, deberíamos filtrar ej: df_netflix &lt;- df_edad_platform_long %&gt;% filter(Platform == \"Netflix\").\n\ndf_moviestreams &lt;- df_moviestreams %&gt;%\nmutate(Age = as.character(na_if(Age, \"\")))\n\ndf_edad_platform &lt;- df_moviestreams %&gt;%\n  select(`Netflix`, `Hulu`, `Prime Video`, `Disney+`, Age) %&gt;%\n  filter(!is.na(Age))\n\ndf_edad_platform_long &lt;- df_edad_platform %&gt;%\n  gather(Platform, Value, -Age) %&gt;%\n  filter(Value == 1) %&gt;%\n  group_by(Platform, Age) %&gt;%\n  summarise(count = n())\n\np4 &lt;- ggplot(df_edad_platform_long, aes(x = Age, y = count, fill = Platform)) + \n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = c(\"#0000CD\", \"#00FF7F\", \"#FF0000\", \"#63B8FF\")) + \n  facet_wrap(vars(Platform), nrow = 4, ncol = 2, scales = \"free\") +\n  labs(title = \"Distribución de películas por grupo de edad\",\n         x = \"Grupo de Edad\",\n         y = \"Número de Películas\",\n       fill = \"Plataforma de Streaming\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(family = \"mono\"),\n        axis.text.y = element_text(family = \"mono\"))\n\nplotly::ggplotly(p4)\n\n\n\n\n\n\nAsí, visualmente se observa que la plataforma de streaming con más películas de edad mínima + 18 recomendada para verlas es Prime Video (2612) y la plataforma de streaming con más películas para todos los públicos (all) o + 7 años también sería Prime Video con 1322 películas (406 y 916). Siguiéndole Disney + con 456 películas (277 y 179 respectivamente), aunque Netflix se le aproxima con 453 películas (130 y 323 respectivamente). Esto se debe en realidad al hecho de que el catálogo de Prime Video y Netflix es mucho mayor como ya se ha analizado anteriormente.\nAsí, si se observará cada plataforma individualmente, sin ver las demás, Disney + destacaría por su cantidad de películas para todos los públicos o mayores de 7 años y Prime Video, Netflix y Hulu por su cantidad de películas recomendadas para mayores de 18 años.\nTambién, hay que tener en cuenta el eje y para el análisis, dado que este es libre para cada plataforma según su número de películas para así representarse de acuerdo a cada plataforma.\nEste resultado tiene relación con el grupo objetivo al que se dirige cada plataforma como se va a indicar posteriormente."
  },
  {
    "objectID": "my_trabajo_BigData.html#footnotes",
    "href": "my_trabajo_BigData.html#footnotes",
    "title": "Análisis de las plataformas de streaming",
    "section": "Notas",
    "text": "Notas\n\nEl streaming o contenido bajo demanda es la distribución de audio o video por Internet de forma continua y sin interrupción y sin necesidad de una descarga previa↩︎\nEl IMDb score and votes es la puntuación sobre 10 que se realiza por votación en Internet Movie Database; la base de datos de películas más grande en Internet.↩︎"
  },
  {
    "objectID": "my_trabajo_BigData.html#categoría-de-las-películas",
    "href": "my_trabajo_BigData.html#categoría-de-las-películas",
    "title": "Análisis de las plataformas de streaming",
    "section": "5. Categoría de las películas",
    "text": "5. Categoría de las películas\nEn cuanto a las categorías de las películas, existen muchas categorías pero si destacamos la principal de cada categoría, podemos encontrar 19 categorías, de cuál en global para las plataformas, predomina drama 🎭 (4592) , comedia 🤪 (3412) y thriller 😨 (2225).\n\nCódigo\n#- wordcloud del género principal de las películas\n\ndf_genres &lt;- df_stream_kaggle %&gt;%\n  group_by(main_genre) %&gt;%\n  summarise(count = n()) %&gt;%\n  ungroup() %&gt;%\n  arrange(desc(count))\n\ndf_genres$main_genre &lt;- factor(df_genres$main_genre)\n\nwordcloud(words = df_genres$main_genre, freq = df_genres$count, min.freq = 50, scale=c(3,1), colors=brewer.pal(8, \"Dark2\"))\n\n\n\n\n\n\n\nSi dividimos por plataforma de streaming, el género principal de sus películas, se observa que:\n\nPara Amazon la mayoría de sus películas son drama, comedia y thriller. 🎭 🤪 😨\nPara Disney la mayoría de sus películas son comedia, documentales y fantasía. 🤪 📹 🧚‍♀️\nPara Hulu la mayoría de sus películas son drama, comedia y thriller. 🎭 🤪 😨\nPara Netflix la mayoría de sus películas son comedia, drama y documentales. 🤪 🎭 📹\n\n\n\nCódigo\n#- filtramos para las plataformas que estamos analizando y agrupamos por plataforma y género principal de sus películas y realizamos un summarise. Así, se observa de número de películas para cada plataforma qué pertenecen a cada categoría principal\n\ndf_genres_by_platform &lt;- df_stream_kaggle %&gt;%\n  filter(streaming_service %in% c(\"netflix\", \"amazon\", \"hulu\", \"disney\")) %&gt;%\n  group_by(streaming_service, main_genre) %&gt;%\n  summarise(count = n()) %&gt;%\n  ungroup()\n\ndf_genres_by_platform$main_genre &lt;- factor(df_genres_by_platform$main_genre)\n\np6 &lt;- ggplot(df_genres_by_platform, aes(x = streaming_service, y = count, color = main_genre)) +\n  geom_point(position = position_dodge(width = 0.8), size = 3) +\n  labs(title = \"Número de Películas por Plataforma y Categoría de Género\",\n       x = \"Plataforma de Streaming\",\n       y = \"Número de Películas por Género\",\n       color = \"Categoría principal\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.text = element_text(size = 8)) + theme(axis.text.x = element_text(family = \"mono\"),\n    axis.text.y = element_text(family = \"mono\"))\n\nplotly::ggplotly(p6)\n\n\n\n\n\n\nAsí, estas plataformas ofrecen más variedad de esas 3 categorías indicadas, aunque también disponen de un catálogo amplio de otras variedades como se puede ver en el data frame. También, cabe comentar que el género mayoritario de las películas tiene relación con el público al que van dirigido estas plataformas, siendo Disney + para todos los públicos y Amazon, Hulu y Netflix para un público juvenil-adulto, como se ha comentado.\n\n\n\nGéneros cinematográficos más populares"
  },
  {
    "objectID": "my_trabajo_BigData.html#así-estas-plataformas-ofrecen-más-variedad-de-esas-3-categorías-indicadas-aunque-también-disponen-de-un-catálogo-amplio-de-otras-variedades-como-se-puede-ver-en-el-data-frame.también-cabe-comentar-que-esto-tiene-relación-con-el-público-al-que-van-dirigido-estas-plataformas-siendo-disney-para-todos-los-públicos-y-amazon-hulu-y-netflix-para-un-público-juvenil-adulto.",
    "href": "my_trabajo_BigData.html#así-estas-plataformas-ofrecen-más-variedad-de-esas-3-categorías-indicadas-aunque-también-disponen-de-un-catálogo-amplio-de-otras-variedades-como-se-puede-ver-en-el-data-frame.también-cabe-comentar-que-esto-tiene-relación-con-el-público-al-que-van-dirigido-estas-plataformas-siendo-disney-para-todos-los-públicos-y-amazon-hulu-y-netflix-para-un-público-juvenil-adulto.",
    "title": "Análisis de las plataformas de streaming",
    "section": "Así, estas plataformas ofrecen más variedad de esas 3 categorías indicadas, aunque también disponen de un catálogo amplio de otras variedades como se puede ver en el data frame.También, cabe comentar que esto tiene relación con el público al que van dirigido estas plataformas siendo Disney + para todos los públicos y Amazon, Hulu y Netflix para un público juvenil-adulto.",
    "text": "Así, estas plataformas ofrecen más variedad de esas 3 categorías indicadas, aunque también disponen de un catálogo amplio de otras variedades como se puede ver en el data frame.También, cabe comentar que esto tiene relación con el público al que van dirigido estas plataformas siendo Disney + para todos los públicos y Amazon, Hulu y Netflix para un público juvenil-adulto."
  },
  {
    "objectID": "my_trabajo_BigData.html#películas-y-series-más-famosas-en-cada-plataforma",
    "href": "my_trabajo_BigData.html#películas-y-series-más-famosas-en-cada-plataforma",
    "title": "Análisis de las plataformas de streaming",
    "section": "6. Películas y series más famosas en cada plataforma",
    "text": "6. Películas y series más famosas en cada plataforma\nEn cuanto a las películas, estas se pueden valorar en este data frame a través del IMDb score y IMDb votes 2, TMDb score y TMDb votes. Las cinco películas que han recibido un mayor número de votos de cada plataforma y así, un IMDb score mayor de entre estas, en cada plataforma, son las siguientes. Hay que tener en cuenta que se está realizando la tabla por orden descendente en función del IMDb votes siendo la primera película que más votos ha recibido.\n6.1 Para Amazon, el ranking de películas mejor valoradas es Titanic, The Usual Suspects, Braveheart, The Sixth Sense y The Terminator.\n\nCódigo\ntop_películas_plataformas &lt;- df_stream_kaggle %&gt;%\n  filter(streaming_service %in% c(\"amazon\")) %&gt;%\n  arrange(desc(imdb_votes))  %&gt;%\n  select(streaming_service, title, release_year, runtime, imdb_score, imdb_votes) %&gt;%\n  group_by(streaming_service) %&gt;%\n  slice_head(n = 5)\n\ntabla_amazon &lt;- kable(\n    head(top_películas_plataformas),\n    caption = paste(\"Top 5 películas de Amazon\"),\n    col.names = c(\"Plataforma\", \"Nombre\", \"Año\", \"Duración minutos\", \"IMDb Score\", \"IMDb Votes\")\n  ) %&gt;%\n    kable_styling(full_width = FALSE, position = \"center\") %&gt;%\n    row_spec(0, background = \"#63B8FF\") %&gt;%\n  column_spec(c(5), background = \"#CAFF70\", color = \"black\") %&gt;%\n  column_spec(c(1, 2, 3, 4, 6), background = \"#F0FFFF\", color = \"black\")\n\ntabla_amazon\n\n\nTop 5 películas de Amazon\n\nPlataforma\nNombre\nAño\nDuración minutos\nIMDb Score\nIMDb Votes\n\n\n\namazon\nTitanic\n1997\n194\n7.9\n1133692\n\n\namazon\nThe Usual Suspects\n1995\n106\n8.5\n1059480\n\n\namazon\nBraveheart\n1995\n177\n8.4\n1016629\n\n\namazon\nThe Sixth Sense\n1999\n107\n8.2\n967864\n\n\namazon\nThe Terminator\n1984\n108\n8.1\n841706\n\n\n\n\n\n6.2 Para Netflix, el ranking de películas mejor valoradas es Inception, Forrest Gump, The Dark Knight Rises, Se7en y Django Unchained.\n\nCódigo\ntop_películas_plataformas &lt;- df_stream_kaggle %&gt;%\n  filter(streaming_service %in% c(\"netflix\")) %&gt;%\n  arrange(desc(imdb_votes)) %&gt;%\n  select(streaming_service, title, release_year, runtime, imdb_score, imdb_votes) %&gt;%\n  group_by(streaming_service) %&gt;%\n  slice_head(n = 5)\n\ntabla_netflix &lt;- kable(\n    head(top_películas_plataformas),\n    caption = paste(\"Top 5 películas de Netflix\"),\n    col.names = c(\"Plataforma\", \"Nombre\", \"Año\", \"Duración minutos\", \"IMDb Score\", \"IMDb Votes\")\n  ) %&gt;%\n    kable_styling(full_width = FALSE, position = \"center\") %&gt;%\n    row_spec(0, background = \"#FF0000\") %&gt;%\n  column_spec(c(5), background = \"#CAFF70\", color = \"black\") %&gt;%\n  column_spec(c(1, 2, 3, 4, 6), background = \"#F0FFFF\", color = \"black\")\n\ntabla_netflix\n\n\nTop 5 películas de Netflix\n\nPlataforma\nNombre\nAño\nDuración minutos\nIMDb Score\nIMDb Votes\n\n\n\nnetflix\nInception\n2010\n148\n8.8\n2294231\n\n\nnetflix\nForrest Gump\n1994\n142\n8.8\n2021343\n\n\nnetflix\nThe Dark Knight Rises\n2012\n165\n8.4\n1669067\n\n\nnetflix\nSe7en\n1995\n127\n8.6\n1606270\n\n\nnetflix\nDjango Unchained\n2012\n165\n8.4\n1472668\n\n\n\n\n\n6.3 Para Hulu, el ranking de películas mejor valoradas es Deadpool, A Beautiful Mind, Black Swan, Parasite y Prisoners.\n\nCódigo\ntop_películas_plataformas &lt;- df_stream_kaggle %&gt;%\n  filter(streaming_service %in% c(\"hulu\")) %&gt;%\n  arrange(desc(imdb_votes)) %&gt;%\n  select(streaming_service, title, release_year, runtime, imdb_score, imdb_votes) %&gt;%\n  group_by(streaming_service) %&gt;%\n  slice_head(n = 5) \n \ntabla_hulu &lt;- kable(\n    head(top_películas_plataformas),\n    caption = paste(\"Top 5 películas de Hulu\"),\n    col.names = c(\"Plataforma\", \"Nombre\", \"Año\", \"Duración minutos\", \"IMDb Score\", \"IMDb Votes\")\n  ) %&gt;%\n    kable_styling(full_width = FALSE, position = \"center\") %&gt;%\n    row_spec(0, background = \"#00FF7F\") %&gt;%\n    column_spec(c(5), background = \"#CAFF70\", color = \"black\") %&gt;%\n  column_spec(c(1, 2, 3, 4, 6), background = \"#F0FFFF\", color = \"black\")\n\ntabla_hulu\n\n\nTop 5 películas de Hulu\n\nPlataforma\nNombre\nAño\nDuración minutos\nIMDb Score\nIMDb Votes\n\n\n\nhulu\nDeadpool\n2016\n108\n8.0\n996056\n\n\nhulu\nA Beautiful Mind\n2001\n135\n8.2\n909359\n\n\nhulu\nBlack Swan\n2010\n108\n8.0\n745933\n\n\nhulu\nParasite\n2019\n132\n8.5\n742045\n\n\nhulu\nPrisoners\n2013\n153\n8.1\n679548\n\n\n\n\n\n6.4 Para Disney +, el ranking de películas mejor valoradas es The Avengers, Star Wars, The Empire Strikes Back, Avatar y Guardian of the Galaxy.\n\n\n\nTop 5 películas de Disney +\n\nPlataforma\nNombre\nAño\nDuración minutos\nIMDb Score\nIMDb Votes\n\n\n\ndisney\nThe Avengers\n2012\n143\n8.0\n1353907\n\n\ndisney\nStar Wars\n1977\n125\n8.6\n1321489\n\n\ndisney\nThe Empire Strikes Back\n1980\n124\n8.7\n1248319\n\n\ndisney\nAvatar\n2009\n165\n7.8\n1193331\n\n\ndisney\nGuardians of the Galaxy\n2014\n120\n8.0\n1125382"
  },
  {
    "objectID": "my_trabajo_BigData.html#número-de-suscriptores-de-esta-plataforma",
    "href": "my_trabajo_BigData.html#número-de-suscriptores-de-esta-plataforma",
    "title": "Análisis de las plataformas de streaming",
    "section": "7.1 Número de suscriptores de esta plataforma",
    "text": "7.1 Número de suscriptores de esta plataforma\nEn este caso, los datos sobre los suscriptores están para los 4 trimestres de 2018, los 4 trimestres de 2019 y para dos trimestres de 2020. Así, se puede calcular una media de los trimestres para cada año, para así ver la evolución de los suscriptores de estos años de forma dinámica y animada. Pero también, se puede observar la evolución trimestral dado que de un trimestre a otro del mismo año, los suscriptores también aumentan.\nHay que tener en cuenta que el eje y del gráfico no comienza en 0, sino en aproximadamente 7 M.\n\n\nAnual y dinámico\nTrimestral y estático\n\n\n\n\nCódigo\n#- gráfico para los suscriptores anuales de NETFLIX. Pero primero modificar los datos.\n\ndata_subscribers &lt;- data.frame(\n  Area = c(\"United States and Canada\", \"Latin America\", \"Europe, Middle East, and Africa\", \"Asia-Pacific\"),\n  Q1_2018 = c(60909000, 21260000, 29339000, 7394000),\n  Q2_2018 = c(61870000, 22795000, 31317000, 8372000),\n  Q3_2018 = c(63010000, 24115000, 33836000, 9461000),\n  Q4_2018 = c(64757000, 26077000,   37818000, 10607000),\n  Q1_2019 = c(66633000, 27547000,   42542000, 12141000),\n  Q2_2019 = c(66501000, 27890000, 44229000, 12942000),\n  Q3_2019 = c(67114000, 29380000, 47355000, 14485000),\n  Q4_2019 = c(67662000, 31417000, 51778000, 16233000),\n  Q1_2020 = c(69969000, 34318000, 58734000, 19835000),\n  Q2_2020 = c(72904000, 36068000, 61483000, 22492000))\n\ndata_subscribers &lt;- data_subscribers %&gt;% \n  pivot_longer(cols = starts_with(\"Q\"), names_to = \"Quarter\", values_to = \"Subscribers\") %&gt;%\n  mutate(Year = substr(Quarter, start = 4, stop = 7),\n         Quarter = substr(Quarter, start = 1, stop = 2)) \n\ndata_subscribers1 &lt;- data_subscribers %&gt;%\n  group_by(Area, Year) %&gt;%\n  summarise(media_trimestral = mean(Subscribers)) %&gt;% \n  ungroup()\n\ndata_subscribers1$Year &lt;- as.Date(paste0(data_subscribers1$Year, \"-01-01\"))\ndata_subscribers1$Year &lt;- as.Date(data_subscribers1$Year, format = \"%Y\")\n\nmis_colores &lt;- c(\"United States and Canada\" = \"#1E90FF\",\n                 \"Latin America\" = \"#FFA500\",\n                 \"Europe, Middle East, and Africa\" = \"#FFB6C1\",\n                 \"Asia-Pacific\" = \"#B452CD\")\n\nbreaks &lt;- seq(min(data_subscribers1$Year), max(data_subscribers1$Year), length.out = 3)\n\np7 &lt;- ggplot(data_subscribers1, aes(x = Year, y = media_trimestral, color = Area)) +\n  geom_line(linewidth = 0.7) +\n  labs(title = \"Evolución de los suscriptores de Netflix por Área\", \n       subtitle = \"(2018-2020)\",\n       x = \"Años\", y = \"Suscriptores medios\",\n       color = \"Área\") +\n  theme_minimal() + \n  scale_y_continuous(labels = scales::comma_format(scale = 1e-6, suffix = \"M\")) +\n  scale_color_manual(values = mis_colores) +\n  scale_x_date(breaks = breaks, labels = format(breaks, \"%Y\"))  + theme(plot.title = element_text(face = \"bold\"),\n    legend.key = element_rect(fill = \"thistle1\"),\n    legend.background = element_rect(fill = \"thistle1\")) + theme(axis.text = element_text(colour = \"black\"),\n    axis.text.x = element_text(colour = \"black\"),\n    axis.text.y = element_text(colour = \"black\"),\n    legend.background = element_rect(colour = \"white\")) + theme(legend.key = element_rect(colour = \"thistle1\")) +\n  transition_reveal(Year)\n\np7\n\n\n\n\n\n\n\n\n\n\nCódigo\n#- gráfico para los suscriptores trimestrales de NETFLIX. Pero primero modificar los datos.\n\ndata_subscribers &lt;- data.frame(\n  Area = c(\"United States and Canada\", \"Latin America\", \"Europe, Middle East, and Africa\", \"Asia-Pacific\"),\n  Q1_2018 = c(60909000, 21260000, 29339000, 7394000),\n  Q2_2018 = c(61870000, 22795000, 31317000, 8372000),\n  Q3_2018 = c(63010000, 24115000, 33836000, 9461000),\n  Q4_2018 = c(64757000, 26077000,   37818000, 10607000),\n  Q1_2019 = c(66633000, 27547000,   42542000, 12141000),\n  Q2_2019 = c(66501000, 27890000, 44229000, 12942000),\n  Q3_2019 = c(67114000, 29380000, 47355000, 14485000),\n  Q4_2019 = c(67662000, 31417000, 51778000, 16233000),\n  Q1_2020 = c(69969000, 34318000, 58734000, 19835000),\n  Q2_2020 = c(72904000, 36068000, 61483000, 22492000))\n\ndata_subscribers &lt;- data_subscribers %&gt;% \n  pivot_longer(cols = starts_with(\"Q\"), names_to = \"Quarter\", values_to = \"Subscribers\") %&gt;%\n  mutate(Year = substr(Quarter, start = 4, stop = 7),\n         Quarter = substr(Quarter, start = 1, stop = 2)) \n\ndata_subscribers$Year &lt;- as.Date(paste0(data_subscribers$Year, format = \"-01-01\"))\n\nmis_colores &lt;- c(\"United States and Canada\" = \"#1E90FF\",\n                 \"Latin America\" = \"#FFA500\",\n                 \"Europe, Middle East, and Africa\" = \"#FFB6C1\",\n                 \"Asia-Pacific\" = \"#B452CD\")\n\np7 &lt;- ggplot(data_subscribers, aes(x = paste(Year, Quarter), y = Subscribers, color = Area, group = Area)) +\n  geom_line(linewidth = 0.7) +\n  labs(title = \"Evolución trimestral de los suscriptores de Netflix por Área\", \n       subtitle = \"(Trimestres 2018-2020)\",\n       x = \"Trimestre del año\", y = \"Suscriptores\",\n       color = \"Área\") +\n  theme_minimal() + \n  scale_y_continuous(labels = scales::comma_format(scale = 1e-6, suffix = \"M\")) + \n  scale_color_manual(values = mis_colores) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_x_discrete(labels = c(\"1T 2018\", \"2T 2018\", \"3T 2018\", \"4T 2018\",\n                              \"1T 2019\", \"2T 2019\", \"3T 2019\", \"4T 2019\",\n                              \"1T 2020\", \"2T 2020\")) +\n  theme(plot.title = element_text(face = \"bold\"),\n    legend.key = element_rect(fill = \"thistle1\"),\n    legend.background = element_rect(fill = \"thistle1\")) + theme(axis.text = element_text(colour = \"black\"),\n    axis.text.x = element_text(colour = \"black\"),\n    axis.text.y = element_text(colour = \"black\"),\n    legend.background = element_rect(colour = \"white\")) + theme(legend.key = element_rect(colour = \"thistle1\")) \n\n\np7\n\n\n\n\n\n\n\n\n\n\n\n🌐 Los sucriptores de Netflix han ido aumentando considerablemente desde sus inicios y en concreto, en los años analizados (2018-2020). Esta plataforma se encuentra en gran diversidad de países y su catálogo también se adapta según el país. Así, en 2018 y 2020 por regiones:\n\nEn 2018, en el área Asia-Pacifico el número de suscriptores era de 8958500 y en 2020 21163500. La variación en esos tres años fue de + 12205000.\nEn 2018, en el área Europa, Asia Central y África el número de suscriptores era de 33077500 y en 2020 60108500.La variación en esos tres años fue de + 27031000.\nEn 2018, en el área América del Sur el número de suscriptores era de 23561750 y en 2020 35193000. La variación en esos tres años fue de + 11631250.\nEn 2018, en el área Estados Unidos y Canadá el número de suscriptores era de 62636500 y en 2020 71436500. La variación en esos tres años fue de + 8800000.\n\nComo se observa en el gráfico, la tendencia es creciente en todas las regiones siendo en Estados Unidos y en Canadá el mayor número de suscriptores. Si analizamos las variaciones, la región que ha observado un mayor aumento es Europa, Asia Central y África.\nTambién, se pueden observan los suscriptores por trimestre de 2018 a 2020 con las mismas conclusiones.\n\n“Netflix bate récord de suscriptores: llega a los 247,1 millones tras sumar 8,8 millones de nuevos usuarios en 2023” El Español"
  },
  {
    "objectID": "my_trabajo_BigData.html#ganancias-de-esta-plataforma",
    "href": "my_trabajo_BigData.html#ganancias-de-esta-plataforma",
    "title": "Análisis de las plataformas de streaming",
    "section": "7.2 Ganancias de esta plataforma",
    "text": "7.2 Ganancias de esta plataforma\nEn este caso, los datos sobre las ganancias están para los 4 trimestres de 2018, los 4 trimestres de 2019 y para dos trimestres de 2020. Así, se puede calcular una media de los trimestres para cada año, para así ver la evolución de las ganancias de estos años de forma dinámica y animada. Pero también, se puede observar la evolución trimestral dado que de un trimestre a otro del mismo año, las ganancias también aumentan. Hay que tener en cuenta que el eje y del gráfico no comienza en 0, sino en aproximadamente 199 M.\n\n\nAnual y dinámico\nTrimestral y estático\n\n\n\n\nCódigo\n#- gráfico para las ganancias anuales de NETFLIX. Pero primero modificar los datos.\n\ndata_revenue &lt;- data.frame(\n  Area = c(\"United States and Canada\", \"Latin America\", \"Europe, Middle East, and Africa\", \"Asia-Pacific\"),\n  Q1_2018 = c(1976157000, 540182000, 886649000, 199117000),\n  Q2_2018 = c(2049546000, 568071000, 975497000, 221252000),\n  Q3_2018 = c(2094850000, 562307000, 1004749000, 248691000),\n  Q4_2018 = c(2160979000, 567137000, 1096812000, 276756000),\n  Q1_2019 = c(2256851000, 630472000, 1233379000, 319602000),\n  Q2_2019 = c(2501199000, 677136000, 1319087000, 349494000),\n  Q3_2019 = c(2621250000, 741434000, 1428040000, 382304000),\n  Q4_2019 = c(2671908000, 746392000, 1562561000, 418121000),\n  Q1_2020 = c(2702776000, 793453000, 1723474000, 483660000),\n  Q2_2020 = c(2839670000, 785368000, 1892537000, 569140000))\n\ndata_revenue &lt;- data_revenue %&gt;%\n  pivot_longer(cols = starts_with(\"Q\"), names_to = \"Quarter\", values_to = \"Revenue\") %&gt;%\n  mutate(Year = substr(Quarter, start = 4, stop = 7),\n         Quarter = substr(Quarter, start = 1, stop = 2)) \n\ndata_revenue1 &lt;- data_revenue %&gt;%\n  group_by(Area, Year) %&gt;%\n  summarise(media_trimestral = mean(Revenue)) %&gt;% \n  ungroup()\n\ndata_revenue1$Year &lt;- as.Date(paste0(data_revenue1$Year, format = \"-01-01\"))\ndata_revenue1$Year &lt;- as.Date(data_revenue1$Year, format = \"%Y\")\n\nmis_colores &lt;- c(\"United States and Canada\" = \"#98F5FF\",\n                 \"Latin America\" = \"#FFA07A\",\n                 \"Europe, Middle East, and Africa\" = \"#FF6EB4\",\n                 \"Asia-Pacific\" = \"#00FF7F\")\n\nbreaks &lt;- seq(min(data_revenue1$Year), max(data_revenue1$Year), length.out = 3)\n\np8 &lt;- ggplot(data_revenue1, aes(x = Year, y = media_trimestral, color = Area)) +\n  geom_line(linewidth = 0.7) +\n  labs(title = \"Evolución de las ganancias de Netflix por Área\", \n       subtitle = \"(2018-2020)\",\n       x = \"Años\", y = \"Media Ingresos\",\n       color = \"Área\") +\n  theme_minimal() + \n  scale_y_continuous(labels = scales::comma_format(scale = 1e-6, suffix = \"M\"),\n                     breaks = seq(0, max(data_revenue$Revenue), by = 500000000)) +\n  scale_color_manual(values = mis_colores) +\n  scale_x_date(breaks = breaks, labels = format(breaks, \"%Y\")) + theme(plot.title = element_text(face = \"bold\"),\n    legend.key = element_rect(fill = \"lightcyan\"),\n    legend.background = element_rect(fill = \"lightcyan\")) + theme(axis.text = element_text(colour = \"black\"),\n    axis.text.x = element_text(colour = \"black\"),\n    axis.text.y = element_text(colour = \"black\"),\n    legend.background = element_rect(colour = \"white\")) + theme(legend.key = element_rect(colour = \"lightcyan\")) + \n  transition_reveal(Year)\n\np8\n\n\n\n\n\n\n\n\n\n\nCódigo\n#- gráfico para las ganancias trimestrales de NETFLIX. Pero primero modificar los datos.\n\ndata_revenue &lt;- data.frame(\n  Area = c(\"United States and Canada\", \"Latin America\", \"Europe, Middle East, and Africa\", \"Asia-Pacific\"),\n  Q1_2018 = c(1976157000, 540182000, 886649000, 199117000),\n  Q2_2018 = c(2049546000, 568071000, 975497000, 221252000),\n  Q3_2018 = c(2094850000, 562307000, 1004749000, 248691000),\n  Q4_2018 = c(2160979000, 567137000, 1096812000, 276756000),\n  Q1_2019 = c(2256851000, 630472000, 1233379000, 319602000),\n  Q2_2019 = c(2501199000, 677136000, 1319087000, 349494000),\n  Q3_2019 = c(2621250000, 741434000, 1428040000, 382304000),\n  Q4_2019 = c(2671908000, 746392000, 1562561000, 418121000),\n  Q1_2020 = c(2702776000, 793453000, 1723474000, 483660000),\n  Q2_2020 = c(2839670000, 785368000, 1892537000, 569140000))\n\ndata_revenue &lt;- data_revenue %&gt;%\n  pivot_longer(cols = starts_with(\"Q\"), names_to = \"Quarter\", values_to = \"Revenue\") %&gt;%\n  mutate(Year = substr(Quarter, start = 4, stop = 7),\n         Quarter = substr(Quarter, start = 1, stop = 2)) \n\ndata_revenue$Year &lt;- as.Date(paste0(data_revenue$Year, format = \"-01-01\"))\n\np8 &lt;- ggplot(data_revenue, aes(x = paste(Year, Quarter), y = Revenue, color = Area, group = Area)) +\n  geom_line(linewidth = 0.7) +\n  labs(title = \"Evolución trimestral de las ganancias de Netflix por Área\", \n       subtitle = \"(Trimestres 2018-2020)\",\n       x = \"Trimestre del año\", y = \"Ingresos\",\n       color = \"Área\") +\n  theme_minimal() + \n  scale_y_continuous(labels = scales::comma_format(scale = 1e-6, suffix = \"M\"),\n                     breaks = seq(0, max(data_revenue$Revenue), by = 500000000)) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_color_manual(values = mis_colores) +\n  scale_x_discrete(labels = c(\"1T 2018\", \"2T 2018\", \"3T 2018\", \"4T 2018\",\n                              \"1T 2019\", \"2T 2019\", \"3T 2019\", \"4T 2019\",\n                              \"1T 2020\", \"2T 2020\")) +\n  theme(plot.title = element_text(face = \"bold\"),\n    legend.key = element_rect(fill = \"lightcyan\"),\n    legend.background = element_rect(fill = \"lightcyan\")) + theme(axis.text = element_text(colour = \"black\"),\n    axis.text.x = element_text(colour = \"black\"),\n    axis.text.y = element_text(colour = \"black\"),\n    legend.background = element_rect(colour = \"white\")) + theme(legend.key = element_rect(colour = \"lightcyan\")) \n\np8\n\n\n\n\n\n\n\n\n\n\n\n💰 Las ganancias de Netflix han ido aumentando considerablemente desde sus inicios y en concreto, en los años analizados (2018-2020). Esta plataforma ha aumentando sus ganancias en todas las regiones. Así, en 2018 y 2020 por regiones:\n\nEn 2018, en el área Asia-Pacifico las ganancias eran de 236454000 y en 2020 526400000. La variación en esos tres años fue de + 289946000.\nEn 2018, en el área Europa, Asia Central y África las ganancias eran de 990926750 y en 2020 1808005500.La variación en esos tres años fue de + 817078750.\nEn 2018, en el área América del Sur las ganancias eran de 559424250 y en 2020 789410500. La variación en esos tres años fue de + 229986250.\nEn 2018, en el área Estados Unidos y Canadá las ganancias eran de 2070383000 y en 2020 2771223000. La variación en esos tres años fue de + 700840000.\n\nComo se observa en el gráfico, la tendencia es creciente en todas las regiones siendo en Estados Unidos y en Canadá el mayor número de ganancias. Si analizamos las variaciones, la región que ha observado un mayor aumento es Europa, Asia Central y África (mayor número de suscriptores indica mayores ganancias)\nTambién, se pueden observan las ganancias por trimestre de 2018 a 2020 con las mismas conclusiones.\n\n“La compañía logró un beneficio neto de 1.677 millones de dólares (1.594 millones de euros). También consiguió unos ingresos de 8.542 millones de dólares, lo que supone un aumento del 7,8% con respecto al tercer trimestre de 2022” El Español\n\n\n“La plataforma de streaming Netflix tuvo su mayor ganancia en Bolsa en más de dos años, tras dar a conocer que agregó 8.8 millones de nuevos suscriptores en el tercer trimestre de 2023.” El Economista"
  },
  {
    "objectID": "my_trabajo_BigData.html#conclusión",
    "href": "my_trabajo_BigData.html#conclusión",
    "title": "Análisis de las plataformas de streaming",
    "section": "Conclusión",
    "text": "Conclusión\nActualmente, existen muchas plataformas de streaming para elegir. Algunas variables a tener en cuenta para la elección de estas son los precios, la cantidad de películas o series disponibles, el idioma principal o la categoría, como se ha analizado. Además, en todas ellas hay una variedad muy extensa de contenidos para poder elegir, por lo que la mayoría tienen grandes ofertas de catálogos de series, películas, documentales, producciones propias, animación, contenido infantil y demás.\nAsí que la elección de una plataforma de streaming depende de los intereses de cada uno; es más una cuestión subjetiva. Y muchos consumidores disponen de varias plataformas de streaming contratadas al mismo tiempo.\n\n\nPreferencias de las plataformas Streaming obtenido de Data wrapper\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCon esto acabo mi trabajo para BigData !! 🎥 🎞️ 🎬\n\n\n\n\n\n\n\nInformación sobre la sesión\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n current session info \n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Sonoma 14.1.1\n system   x86_64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Madrid\n date     2024-01-23\n pandoc   3.1.1 @ /private/var/folders/v6/3rk9f0w97938t5mvp3nk7b780000gn/T/AppTranslocation/63EDF30B-31EB-404F-9238-7D87E72D29D3/d/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package       * version  date (UTC) lib source\n bit             4.0.5    2022-11-15 [1] CRAN (R 4.3.0)\n bit64           4.0.5    2020-08-30 [1] CRAN (R 4.3.0)\n cli             3.6.1    2023-03-23 [1] CRAN (R 4.3.0)\n clipr           0.8.0    2022-02-22 [1] CRAN (R 4.3.0)\n colorspace      2.1-0    2023-01-23 [1] CRAN (R 4.3.0)\n crayon          1.5.2    2022-09-29 [1] CRAN (R 4.3.0)\n crosstalk       1.2.0    2021-11-04 [1] CRAN (R 4.3.0)\n data.table      1.14.8   2023-02-17 [1] CRAN (R 4.3.0)\n desc            1.4.2    2022-09-08 [1] CRAN (R 4.3.0)\n details         0.3.0    2022-03-27 [1] CRAN (R 4.3.0)\n digest          0.6.33   2023-07-07 [1] CRAN (R 4.3.0)\n dplyr         * 1.1.4    2023-11-17 [1] CRAN (R 4.3.0)\n ellipsis        0.3.2    2021-04-29 [1] CRAN (R 4.3.0)\n evaluate        0.21     2023-05-05 [1] CRAN (R 4.3.0)\n fansi           1.0.5    2023-10-08 [1] CRAN (R 4.3.0)\n farver          2.1.1    2022-07-06 [1] CRAN (R 4.3.0)\n fastmap         1.1.1    2023-02-24 [1] CRAN (R 4.3.0)\n forcats       * 1.0.0    2023-01-29 [1] CRAN (R 4.3.0)\n formatR         1.14     2023-01-17 [1] CRAN (R 4.3.0)\n generics        0.1.3    2022-07-05 [1] CRAN (R 4.3.0)\n gganimate     * 1.0.8    2022-09-08 [1] CRAN (R 4.3.0)\n ggplot2       * 3.4.4    2023-10-12 [1] CRAN (R 4.3.0)\n ggThemeAssist * 0.1.5    2016-08-13 [1] CRAN (R 4.3.0)\n ggthemes      * 4.2.4    2021-01-20 [1] CRAN (R 4.3.0)\n gifski          1.12.0-2 2023-08-12 [1] CRAN (R 4.3.0)\n glue            1.6.2    2022-02-24 [1] CRAN (R 4.3.0)\n gtable          0.3.4    2023-08-21 [1] CRAN (R 4.3.0)\n here            1.0.1    2020-12-13 [1] CRAN (R 4.3.0)\n highr           0.10     2022-12-22 [1] CRAN (R 4.3.0)\n hms             1.1.3    2023-03-21 [1] CRAN (R 4.3.0)\n htmltools       0.5.6    2023-08-10 [1] CRAN (R 4.3.0)\n htmlwidgets     1.6.2    2023-03-17 [1] CRAN (R 4.3.0)\n httpuv          1.6.11   2023-05-11 [1] CRAN (R 4.3.0)\n httr            1.4.7    2023-08-15 [1] CRAN (R 4.3.0)\n jsonlite        1.8.7    2023-06-29 [1] CRAN (R 4.3.0)\n kableExtra    * 1.3.4    2021-02-20 [1] CRAN (R 4.3.0)\n knitr         * 1.43     2023-05-25 [1] CRAN (R 4.3.0)\n labeling        0.4.3    2023-08-29 [1] CRAN (R 4.3.0)\n later           1.3.1    2023-05-02 [1] CRAN (R 4.3.0)\n lazyeval        0.2.2    2019-03-15 [1] CRAN (R 4.3.0)\n lifecycle       1.0.4    2023-11-07 [1] CRAN (R 4.3.0)\n lubridate     * 1.9.2    2023-02-10 [1] CRAN (R 4.3.0)\n magrittr        2.0.3    2022-03-30 [1] CRAN (R 4.3.0)\n mime            0.12     2021-09-28 [1] CRAN (R 4.3.0)\n miniUI          0.1.1.1  2018-05-18 [1] CRAN (R 4.3.0)\n munsell         0.5.0    2018-06-12 [1] CRAN (R 4.3.0)\n patchwork     * 1.1.3    2023-08-14 [1] CRAN (R 4.3.0)\n pillar          1.9.0    2023-03-22 [1] CRAN (R 4.3.0)\n pkgconfig       2.0.3    2019-09-22 [1] CRAN (R 4.3.0)\n plotly        * 4.10.2   2023-06-03 [1] CRAN (R 4.3.0)\n png             0.1-8    2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits     1.1.1    2020-01-24 [1] CRAN (R 4.3.0)\n progress        1.2.2    2019-05-16 [1] CRAN (R 4.3.0)\n promises        1.2.1    2023-08-10 [1] CRAN (R 4.3.0)\n purrr         * 1.0.2    2023-08-10 [1] CRAN (R 4.3.0)\n R.methodsS3     1.8.2    2022-06-13 [1] CRAN (R 4.3.0)\n R.oo            1.25.0   2022-06-12 [1] CRAN (R 4.3.0)\n R.utils         2.12.2   2022-11-11 [1] CRAN (R 4.3.0)\n R6              2.5.1    2021-08-19 [1] CRAN (R 4.3.0)\n RColorBrewer  * 1.1-3    2022-04-03 [1] CRAN (R 4.3.0)\n Rcpp            1.0.11   2023-07-06 [1] CRAN (R 4.3.0)\n readr         * 2.1.4    2023-02-10 [1] CRAN (R 4.3.0)\n rio           * 1.0.1    2023-09-19 [1] CRAN (R 4.3.0)\n rlang           1.1.2    2023-11-04 [1] CRAN (R 4.3.0)\n rmarkdown       2.24     2023-08-14 [1] CRAN (R 4.3.0)\n rprojroot       2.0.3    2022-04-02 [1] CRAN (R 4.3.0)\n rstudioapi      0.15.0   2023-07-07 [1] CRAN (R 4.3.0)\n rvest           1.0.3    2022-08-19 [1] CRAN (R 4.3.0)\n scales          1.2.1    2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo     1.2.2    2021-12-06 [1] CRAN (R 4.3.0)\n shiny           1.7.5.1  2023-10-14 [1] CRAN (R 4.3.0)\n stringi         1.8.2    2023-11-23 [1] CRAN (R 4.3.0)\n stringr       * 1.5.1    2023-11-14 [1] CRAN (R 4.3.0)\n svglite         2.1.1    2023-01-10 [1] CRAN (R 4.3.0)\n systemfonts     1.0.4    2022-02-11 [1] CRAN (R 4.3.0)\n tibble        * 3.2.1    2023-03-20 [1] CRAN (R 4.3.0)\n tidyr         * 1.3.0    2023-01-24 [1] CRAN (R 4.3.0)\n tidyselect      1.2.0    2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse     * 2.0.0    2023-02-22 [1] CRAN (R 4.3.0)\n timechange      0.2.0    2023-01-11 [1] CRAN (R 4.3.0)\n tweenr          2.0.2    2022-09-06 [1] CRAN (R 4.3.0)\n tzdb            0.4.0    2023-05-12 [1] CRAN (R 4.3.0)\n utf8            1.2.4    2023-10-22 [1] CRAN (R 4.3.0)\n vctrs           0.6.4    2023-10-12 [1] CRAN (R 4.3.0)\n viridisLite     0.4.2    2023-05-02 [1] CRAN (R 4.3.0)\n webshot         0.5.5    2023-06-26 [1] CRAN (R 4.3.0)\n withr           2.5.2    2023-10-30 [1] CRAN (R 4.3.0)\n wordcloud     * 2.6      2018-08-24 [1] CRAN (R 4.3.0)\n xfun            0.40     2023-08-09 [1] CRAN (R 4.3.0)\n xml2            1.3.5    2023-07-06 [1] CRAN (R 4.3.0)\n xtable          1.8-4    2019-04-21 [1] CRAN (R 4.3.0)\n yaml            2.3.7    2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "my_trabajo_BigData.html#caso-de-netflix",
    "href": "my_trabajo_BigData.html#caso-de-netflix",
    "title": "Análisis de las plataformas de streaming",
    "section": "7. Caso de NETFLIX",
    "text": "7. Caso de NETFLIX\nNetflix, Inc es una compañía creada en 1997 con sede en Estados Unidos. La compañía se define en su reporte anual a los inversores como “uno de los líderes mundiales del entretenimiento con aproximadamente 222 millones de suscriptores en alrededor de 190 países con series de televisión, documentales, largometrajes y juegos de móviles a través de una gran variedad de géneros e idiomas” (Netflix, 2022).\nSu estrategia consiste en incrementar el número de suscriptores globalmente y continuamente están mejorando la experiencia de la plataforma a través de la expansión continua de su contenido que atrae a nuevos miembros y hace que los antiguos permanezcan (Netflix, 2022). Además, Netflix no solo ofrece series y películas ajenas (cuyas licencias obtiene) sino que se encarga de producir sus propias licencias.\n\n\n\nNETFLIX"
  }
]